C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE POWER_MONITOR
OBJECT MODULE PLACED IN .\output\obj\power_monitor.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE power\power_monitor.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(.
                    -\config;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\slave;.\
                    -bluetooth;.\i2c) DEBUG PRINT(.\output\lst\power_monitor.lst) OBJECT(.\output\obj\power_monitor.obj)

line level    source

   1          #include "syscfg.h"
   2          #include "message.h"
   3          #include "debug.h"
   4          #include "key.h"
   5          #include "sysctrl.h"
   6          #include "adc.h"
   7          #include "timer.h"
   8          #include "utility.h"
   9          #include "power.h"
  10          #include "device.h"
  11          #include "display.h"
  12          #include "Sys_on_off.h"
  13          #include "Nvm.h"
  14          #include "power_monitor.h"
  15          #include "sled_disp.h"
  16          
  17          #ifdef FUNC_DISP_EN
  18          #include "seg_panel.h"
  19          #include "Lcd_seg.h"
  20          #endif
  21          extern VOID UnMute(VOID);
  22          extern BOOL GetBtMuteFlag();
  23          
  24          #ifdef FUNC_POWER_MONITOR_EN
  25          
  26          #define LDOIN_SAMPLE_COUNT                      100             //获取LDOIN幅度时用来平均的采样次数
  27          #define LDOIN_SAMPLE_PERIOD                     50              //获取LDOIN幅度时获取采样值的间隔(ms)
  28          #define LOW_POWEROFF_TIME                       10000           //低电检测关机连续检测时间(ms)
  29          #define LOW_POWER_SONG_TIME                     30000           //
  30          
  31          
  32          //以下定义不同的电压检测事件的触发电压(单位mV)，用户根据自身系统电池的特点来配置
  33          
  34          
  35          #define LDOIN_VOLTAGE_FULL                      4200
  36          #define LDOIN_VOLTAGE_HIGH                      3600
  37          #define LDOIN_VOLTAGE_LOW                       3400
  38          #define LDOIN_VOLTAGE_OFF                       3200    //低于此电压值进入关机powerdown状态
  39          
  40          //电压检测时不同的显示处理
  41          
  42          
  43          //主要用于电压状态显示的变量
  44          static TIMER BlinkTimer;
  45          static PWR_MNT_DISP PwrMntDisp;
  46          static BOOL LowPwr_Flag = TRUE;
  47          
  48          
  49          
  50          //用于电压检测的变量
  51          TIMER LowPowerSongTimer;
  52          
  53          TIMER PowerMonitorTimer;
C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 2   

  54          TIMER PowerOffTimer;
  55          DWORD LdoinSampleSum = 0; 
  56          WORD  LdoinSampleCnt = LDOIN_SAMPLE_COUNT;
  57          DWORD LdoinLevelAverage = 0;            //当前LDOIN电压平均值
  58          
  59          extern BOOL SongPlayDo(VOID);           
  60          extern BOOL SPI_PlaySelectNum(BYTE SpiPlayNum, BOOL PlayResumeFlag);
  61          
  62          PWR_MNT_DISP GetPwrDisp(void)
  63          {
  64   1              return PwrMntDisp;
  65   1      }
  66          VOID PowerMonitorDisp(VOID)
  67          {
  68   1      #if (defined(FUNC_SEG_LED_EN) || defined(FUNC_SEG_LCD_EN))
                      static BOOL IsToShow = FALSE;
              
                      switch(PwrMntDisp)
                      {
                              case PWR_MNT_DISP_CHARGE:
                                      //闪烁充电ICON,表示正在充电
                                  if(IsTimeOut(&BlinkTimer))
                                      {
                                              TimeOutSet(&BlinkTimer, 500);
                                              if(IsToShow)
                                              {
                                                      //DBG(("Charge 111\n"));                                                
                                                      DispIcon(ICON_BATFUL, TRUE);
                                                      DispIcon(ICON_BATHAF, FALSE);
                                      IsToShow = FALSE;
                                              }
                                              else
                                              {
                                                      //DBG(("Charge 000\n"));                                                
                                                      DispIcon(ICON_BATFUL, FALSE);
                                                      DispIcon(ICON_BATHAF, TRUE);
                                                      IsToShow = TRUE;
                                              }
                                      }
                                      break;
              
                              case PWR_MNT_DISP_HIGH_V:
                                      //DBG(("BAT FULL\n"));                          
                                      DispIcon(ICON_BATFUL, TRUE);
                                      DispIcon(ICON_BATHAF, FALSE);
                                      //可以显示满格电量，请添加显示代码
                                      break;
                                      
                              case PWR_MNT_DISP_MID_V:
                                      //DBG(("BAT HALF\n"));                          
                                      DispIcon(ICON_BATFUL, FALSE);
                                      DispIcon(ICON_BATHAF, TRUE);
                                      //可以显示2格电量，请添加显示代码
                                      break;
              
                              case PWR_MNT_DISP_LOW_V:
                                      DispIcon(ICON_BATFUL, FALSE);
                                      DispIcon(ICON_BATHAF, TRUE);
                                      //可以显示1格电量，请添加显示代码
                                      break;
                                      
                              case PWR_MNT_DISP_EMPTY_V:
C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 3   

                                      //DBG(("BAT EMPTY\n"));                         
                                      DispIcon(ICON_BATFUL, FALSE);
              
                                      if(IsTimeOut(&BlinkTimer))
                                      {
                                              TimeOutSet(&BlinkTimer, 300);
                                              if(IsToShow)
                                              {
                                                      DispIcon(ICON_BATHAF, TRUE);
                                              }
                                              else
                                              {
                                                      DispIcon(ICON_BATHAF, FALSE);
                                              }
                                              IsToShow = !IsToShow;
                                      }
                                      //可以显示0格电量，请添加显示代码
                                      break;
                                      
                              case PWR_MNT_DISP_SYS_OFF:
                                      //DBG(("BAT OFF\n"));
                                      ClearScreen();                  //清除显示                              
                                      DispString(" LO ");
                                      break;
                                      
                              default:
                                      break;
                      }
              #endif  
 145   1      }
 146          
 147          
 148          //监测LDOIN的电压值，执行对应检测点的处理
 149          //PowerOnInitFlag: TRUE--第一次上电执行电源监控检测
 150          static VOID PowerLdoinLevelMonitor(BOOL PowerOnInitFlag)
 151          {       
 152   1              BOOL PowerOffFlag = FALSE;
 153   1                      
 154   1              if(LdoinSampleCnt > 0)
 155   1              {
 156   2      #ifdef AU6210K_NR_D_8_CSRBT
                              LdoinSampleSum +=  (AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33)
                                      + AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33) 
                                      + AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33) + 2) / 3;  
              #else
 161   2                      LdoinSampleSum += GetLdoinVoltage();                    
 162   2      #endif
 163   2                      LdoinSampleCnt--;
 164   2              }
 165   1      
 166   1              //采样够LDOIN_SAMPLE_COUNT次数，求LDOIN平均值
 167   1              if(LdoinSampleCnt == 0)
 168   1              {
 169   2                      LdoinLevelAverage = LdoinSampleSum / LDOIN_SAMPLE_COUNT;
 170   2      
 171   2                      DBG(("LODin 5V Volt: %lu", (DWORD)LdoinLevelAverage));
 172   2      
 173   2                      //为继续检测LDOIN，初始化变量
 174   2                      LdoinSampleCnt = LDOIN_SAMPLE_COUNT;
 175   2                      LdoinSampleSum = 0;
 176   2      
 177   2      #ifdef  OPTION_CHARGER_DETECT
C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 4   

                              if(IsInCharge())                //充电器已经接入的处理
                              {               
                                      return;
                              }
              #endif
 183   2                      
 184   2                      if(LdoinLevelAverage > LDOIN_VOLTAGE_HIGH)        
 185   2                      {
 186   3                              //可以显示满格电量，请在PowerMonitorDisp中添加显示代码
 187   3                              //PowerMonitorDisp(PWR_MNT_DISP_HIGH_V);
 188   3                              PwrMntDisp = PWR_MNT_DISP_HIGH_V;
 189   3                              //DBG(("bat full\n"));
 190   3                      }
 191   2                      /*
 192   2                      else if(LdoinLevelAverage > LDOIN_VOLTAGE_MID)
 193   2                      {
 194   2                              //可以显示2格电量，请在PowerMonitorDisp中添加显示代码
 195   2                              //PowerMonitorDisp(PWR_MNT_DISP_MID_V);
 196   2                              PwrMntDisp = PWR_MNT_DISP_MID_V;
 197   2                      }
 198   2                      //*/
 199   2                      else if(LdoinLevelAverage > LDOIN_VOLTAGE_LOW)
 200   2                      {
 201   3                              //可以显示1格电量，请在PowerMonitorDisp中添加显示代码
 202   3                              //PowerMonitorDisp(PWR_MNT_DISP_LOW_V);
 203   3                              PwrMntDisp = PWR_MNT_DISP_LOW_V;
 204   3                              //DBG(("bat LOW\n"));
 205   3                      }
 206   2                      else if(LdoinLevelAverage > LDOIN_VOLTAGE_OFF)
 207   2                      {
 208   3                              //可以显示0格电量，请在PowerMonitorDisp中添加显示代码
 209   3                              //PowerMonitorDisp(PWR_MNT_DISP_EMPTY_V);
 210   3                              PwrMntDisp = PWR_MNT_DISP_EMPTY_V;
 211   3                      }
 212   2      
 213   2                      if((LdoinLevelAverage > LDOIN_VOLTAGE_OFF) && (LdoinLevelAverage < LDOIN_VOLTAGE_LOW))
 214   2                              PwrMntDisp = PWR_MNT_DISP_EMPTY_V;
 215   2              
 216   2                      #if defined(AU6210K_ZB_BT007_CSR)
 217   2                      if(PowerOnInitFlag == TRUE) 
 218   2                      {               
 219   3                              if(LdoinLevelAverage <= LDOIN_VOLTAGE_OFF)
 220   3                              {
 221   4                                      PowerOffFlag = TRUE;
 222   4                              }                       
 223   3                      }
 224   2                      
 225   2              #endif
 226   2                      if((PowerOnInitFlag == FALSE) && (LdoinLevelAverage <= LDOIN_VOLTAGE_OFF))
 227   2                      {
 228   3                              PowerOffFlag = TRUE;
 229   3                      }
 230   2                      
 231   2                      if(PowerOffFlag == TRUE)
 232   2                      {
 233   3                              //低于关机电压，进入关机流程
 234   3                              //可以先行显示低电压提示，然后执行关机动作
 235   3                              PwrMntDisp = PWR_MNT_DISP_SYS_OFF;
 236   3                              PowerMonitorDisp();                     
 237   3                              FeedWatchDog();
 238   3                              //停止正常工作流程，包括关显示、关DAC、关功放电源等动作
 239   3                              DBG(("PowerMonitor, PD\n"));    
C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 5   

 240   3                              SystemOff();
 241   3                      }               
 242   2              }
 243   1              PowerMonitorDisp();
 244   1      }
 245          
 246          
 247          //电能监视初始化
 248          //实现系统启动过程中的低电压检测处理，以及初始化充电设备接入检测IO等
 249          VOID PowerMonitorInit(VOID)
 250          {
 251   1              TimeOutSet(&PowerMonitorTimer, 0);      
 252   1              TimeOutSet(&BlinkTimer, 0);     
 253   1              TimeOutSet(&LowPowerSongTimer, 0);      
 254   1      
 255   1      #ifdef OPTION_CHARGER_DETECT
                      //如果系统启动时，充电设备已经接入，就不执行下面这段低电压检测和处理过程
                      if(!IsInCharge())
              #endif  
 259   1              {
 260   2                      //系统启动过程中的低电压检测
 261   2                      //开机时电压检测，如果小于开机电压，不进入设备检测和播放流程，直接关机
 262   2                      //检测过程为时50ms，并进行对应的处理
 263   2                      while(LdoinSampleCnt)
 264   2                      {
 265   3                              LdoinSampleCnt--;
 266   3      #ifdef AU6210K_NR_D_8_CSRBT
                                      LdoinSampleSum +=  (AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33)
                                              + AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33) 
                                              + AdcReadOneChannel(ADC_CHANNEL_B6, ADC_VREF_AVDD33) + 2) / 3;  
              #else
 271   3                              LdoinSampleSum += GetLdoinVoltage();                    
 272   3      #endif                  
 273   3                              WaitMs(5);
 274   3                      }               
 275   2                      //为后边的LDOIN检测初始化变量
 276   2                      PowerLdoinLevelMonitor(TRUE);
 277   2              }
 278   1      }
 279          
 280          
 281          //系统电源状态监控和处理
 282          //系统启动后如果LDOIN大于开机电压，放在系统正常运行中监测LDOIN
 283          VOID PowerMonitor(VOID)
 284          {
 285   1              if(IsTimeOut(&PowerMonitorTimer))
 286   1              {
 287   2                      TimeOutSet(&PowerMonitorTimer, LDOIN_SAMPLE_PERIOD);
 288   2      
 289   2      #ifdef OPTION_CHARGER_DETECT
                              if(IsInCharge())                //充电器已经接入的处理
                              {
                                      if(LdoinLevelAverage >= LDOIN_VOLTAGE_FULL) 
                                      {
                                              //PowerMonitorDisp(PWR_MNT_DISP_HIGH_V);                //显示充电状态
                                              PwrMntDisp = PWR_MNT_DISP_HIGH_V;
                                              //DBG(("charger full\n"));
                                      }
                                      else
                                      {
                                              //PowerMonitorDisp(PWR_MNT_DISP_CHARGE);                //显示充电状态
                                              PwrMntDisp = PWR_MNT_DISP_CHARGE;
C51 COMPILER V9.00   POWER_MONITOR                                                         12/29/2015 13:58:47 PAGE 6   

                                              //DBG(("charger.....\n"));
                                      }
                              }
              #endif          
 306   2      
 307   2      #ifdef AU6210K_MINI503
 308   2                      
 309   2                                      if(PwrMntDisp == PWR_MNT_DISP_EMPTY_V)
 310   2                                      {
 311   3                                              if(IsTimeOut(&LowPowerSongTimer))
 312   3                                              {
 313   4                                                      TimeOutSet(&LowPowerSongTimer, LOW_POWER_SONG_TIME);
 314   4      #ifdef FUNC_SPI_KEY_SOUND_EN                                            
 315   4                                                      SPI_PlaySelectNum(SPIPLAY_SONG_LOW_PWR,0);
 316   4      #endif
 317   4                                                      WaitMs(100);
 318   4                                                      UnMute();
 319   4                                                      DBG1(("low power song!!"));
 320   4                                                      
 321   4                                              }
 322   3                                      }
 323   2                                      else
 324   2                                      {
 325   3                                              TimeOutSet(&LowPowerSongTimer, 0);      
 326   3                                      }
 327   2      #endif                  
 328   2      
 329   2                      //没有采样够LDOIN_SAMPLE_COUNT次数，继续采样
 330   2                      PowerLdoinLevelMonitor(FALSE);
 331   2              }
 332   1      }
 333          
 334          
 335          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    620    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     32       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
