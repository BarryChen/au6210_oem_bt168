C51 COMPILER V9.00   CODING_KEY                                                            11/13/2015 14:16:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CODING_KEY
OBJECT MODULE PLACED IN .\output\obj\coding_key.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE key\coding_key.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(.\conf
                    -ig;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\slave;.\bluet
                    -ooth;.\i2c) DEBUG PRINT(.\output\lst\coding_key.lst) OBJECT(.\output\obj\coding_key.obj)

line level    source

   1          /*
   2          *****************************************************************************
   3          *                                       Mountain View Silicon Tech. Inc.
   4          *       Copyright 2010, Mountain View Silicon Tech. Inc., ShangHai, China
   5          *                                       All rights reserved.
   6          *
   7          * Filename:                     coding_key.c
   8          * Description:          coding_key scan and process c file
   9          *
  10          * Change History:
  11          *                       Orson   - 6/xx/2010 - V0.1
  12          *                                       - created
  13          ******************************************************************************
  14          */
  15          #include <reg51.h>                                                                              //include public header files
  16          
  17          #include "type.h"                                                                               //include project header files
  18          #include "syscfg.h"
  19          #include "utility.h"
  20          #include "debug.h"
  21          #include "timer.h"
  22          #include "sysctrl.h"
  23          #include "key.h"
  24          #include "coding_key.h"
  25          #include "message.h"
  26          
  27          
  28          #ifdef FUNC_CODING_KEY_EN
              /*
              **********************************************************
              *                                       LOCAL MACRO
              **********************************************************
              */
              
              
              //clockwise rotation
              //    ----|                |--------|            |-------------------
              //A       |        |        |        |
              //        |--------|        |--------|
              
              //     -------|        |--------|                |---------------
              //B           |        |        |                |
              //            |--------|        |--------|
              
              
              //counterclockwise rotation
              //    --------|            |--------|            |---------------
              //A           |            |        |            |
              //            |--------|        |--------|
              
              //     ---|        |--------|            |-------------------
              //B       |        |        |            |
              //        |--------|        |--------|
C51 COMPILER V9.00   CODING_KEY                                                            11/13/2015 14:16:11 PAGE 2   

              
              
              
              /*
              **********************************************************
              *                                       LOCAL VARIABLE
              **********************************************************
              */
              static BYTE             ClockWiseCnt;
              static BYTE             CounterClockWiseCnt;
              
              /*
              **********************************************************
              *                                       LOCAL TABLE
              **********************************************************
              */
              
              
              
              /*
              **********************************************************
              *                                       LOCAL FUNCTIONS
              **********************************************************
              */
              
              
              
              /*
              **********************************************************
              *                                       GLOBAL FUNCTION
              **********************************************************
              */
              // Initialize coding key scan (GPIO) operation.
              // Config interrupt at negative edge of signal-A 
              VOID CodingKeyScanInit()
              {
                      //enable pull up resister.
                      SetGpioRegBit(CODING_KEY_A_PORT_IE, CODING_KEY_A_BIT);
                      ClrGpioRegBit(CODING_KEY_A_PORT_OE, CODING_KEY_A_BIT);                                  
                      ClrGpioRegBit(CODING_KEY_A_PORT_PU, CODING_KEY_A_BIT);                                  
                      ClrGpioRegBit(CODING_KEY_A_PORT_PD, CODING_KEY_A_BIT);                                  
                      SetGpioRegBit(CODING_KEY_A_PORT_DS, CODING_KEY_A_BIT);  
              
                      SetGpioRegBit(CODING_KEY_B_PORT_IE, CODING_KEY_B_BIT);
                      ClrGpioRegBit(CODING_KEY_B_PORT_OE, CODING_KEY_B_BIT);                                  
                      ClrGpioRegBit(CODING_KEY_B_PORT_PU, CODING_KEY_B_BIT);                                  
                      ClrGpioRegBit(CODING_KEY_B_PORT_PD, CODING_KEY_B_BIT);                                  
                      SetGpioRegBit(CODING_KEY_B_PORT_DS, CODING_KEY_B_BIT);                                  
              
                      //interrupt at negative edge of signal-A        
                      SetGpioRegBit(GPIO_GLB_INTE, 0x01);     //使能GPIO模块的中断总控制位
                      SetGpioRegBit(CODING_KEY_A_PORT_PTRIG, CODING_KEY_A_BIT);       //设置为上升沿出发中断方式
                      SetGpioRegBit(CODING_KEY_A_PORT_INTC, CODING_KEY_A_BIT);        //清除对应GPIO的中断标志
                      SetGpioRegBit(CODING_KEY_A_PORT_INTE, CODING_KEY_A_BIT);        //使能对应GPIO的中断控制位
                      SetIntEnBit(MASK_INT_GPIO);     //使能GPIO模块的中断总控制位
              
                      ClockWiseCnt = 0;
                      CounterClockWiseCnt = 0;
              }
              
              
              // Key process, image key value to key event.
C51 COMPILER V9.00   CODING_KEY                                                            11/13/2015 14:16:11 PAGE 3   

              MESSAGE CodingKeyEventGet() 
              {
                      MESSAGE event = MSG_NONE;
              
                      if(ClockWiseCnt)
                      {
                              event = MSG_VOL_ADD;
                      }
                      else if(CounterClockWiseCnt)
                      {
                              event = MSG_VOL_SUB;
                      }
                      ClockWiseCnt = 0;
                      CounterClockWiseCnt = 0;
                      return event; 
              }
              
              
              // Coding key signal-A interrupt.
              VOID CodingKeyInterrupt()                                       
              {       
                      if((baGPIOCtrl[CODING_KEY_A_PORT_IN] & CODING_KEY_A_BIT)
                              ||(ClockWiseCnt != 0)
                              ||(CounterClockWiseCnt != 0))
                      {
                              return;
                      }
              
                      if(baGPIOCtrl[CODING_KEY_B_PORT_IN] & CODING_KEY_B_BIT) 
                      { 
                              //clockwise rotation
                              ClockWiseCnt++;
                      }
                      else    
                      {
                              //counterclockwise rotation
                              CounterClockWiseCnt++;
                      }
              }
              
              
              #endif
 158          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
