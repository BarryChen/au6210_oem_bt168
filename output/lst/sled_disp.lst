C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SLED_DISP
OBJECT MODULE PLACED IN .\output\obj\sled_disp.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE display\sled_disp.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(.\c
                    -onfig;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\slave;.\bl
                    -uetooth;.\i2c) DEBUG PRINT(.\output\lst\sled_disp.lst) OBJECT(.\output\obj\sled_disp.obj)

line level    source

   1          #include <string.h>
   2          #include <stdio.h>
   3          
   4          #include "type.h"                                                                               //include project header files
   5          #include "utility.h"
   6          #include "syscfg.h"
   7          #include "sysctrl.h"
   8          #include "timer.h"
   9          #include "display.h"
  10          #include "seg_panel.h"
  11          #include "sled_disp.h"
  12          #include "rtc.h"
  13          #include "playctrl.h"
  14          #include "breakpoint.h"
  15          #include "device_audio.h"
  16          #include "debug.h"
  17          #include "radio_ctrl.h"
  18          #include "device.h"
  19          
  20          #include "power_monitor.h"
  21          
  22          #ifdef FUNC_NPCA110X_EN
              extern BOOL isDefaultBass;
              #endif
  25          #ifdef FUNC_SINGLE_LED_EN
  26          
  27          #define SLedFlickQuick                  gBlink.Blink.HourSet                    //复用做SLED MP3快进快退/Radio搜台闪烁标志(快速闪烁)
  28          #define SLedQuickoff                    gBlink.Blink.HourBlankScreen
  29          #define SLedFlickNormal                 gBlink.Blink.MinSet                     //复用做SLED MP3播放闪烁标志(常速闪烁)
  30          #define SLedNormaloff                   gBlink.Blink.MinBlankScreen
  31          #define SLedFlickSlow                   gBlink.Blink.MuteBlink          //复用做SLED MP3 PAUSE/STOP/MUTE闪烁标志(慢速闪烁)
  32          #define SLedSlowoff                     gBlink.Blink.MuteBlankScreen
  33          #define SLedRepeatFlick                 gBlink.Blink.RepeatBlink
  34          #define SLedRepeatOff                   gBlink.Blink.RepeatOff  
  35          
  36          #ifdef  FUNC_GPIO_KEY_EN
              BOOL SLedOnOffFlag = FALSE;             //按键端口与单个LED端口共用时LED状态标志
              #endif
  39          
  40          extern  BYTE ChannelType;
  41          // LED灯亮或灭.
  42          // led ->LED灯,isLightOn -> TRUE: lighton.
  43          VOID SLedLightOp(SLED_IDX Led, BOOL IsLightOn)
  44          {       
  45   1      #ifdef  FUNC_GPIO_KEY_EN
              //按键端口与单个LED端口共用时端口设置输出
              //      baGPIOCtrl[GPIO_B_IE] &= ~0x40;
              //      baGPIOCtrl[GPIO_B_OE] |= 0x40;
              #endif
  50   1              
  51   1              if(Led == LED_POWER)
  52   1              {
  53   2                      if(IsLightOn)
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 2   

  54   2                      {
  55   3                              //DBG(("SLED_POWER ON\n"));
  56   3      #if defined(FUNC_SINGLE_LED_HIGHON_EN)
                                      SetGpioRegBit(SLED_POWER_PORT, MASK_SLED_POWER);
              #else
  59   3                              if(gSys.SystemMode == SYS_MODE_BLUETOOTH ||
  60   3                                      ChannelType == 3)
  61   3                                      ClrGpioRegBit(SLED_POWER_PORT, MASK_SLED_POWER);
  62   3                              else
  63   3                                      SetGpioRegBit(SLED_POWER_PORT, MASK_SLED_POWER);
  64   3      #endif
  65   3                      }
  66   2                      else
  67   2                      {
  68   3                              //DBG(("SLED_POWER OFF\n"));
  69   3      #if defined(FUNC_SINGLE_LED_HIGHON_EN)
                                      ClrGpioRegBit(SLED_POWER_PORT, MASK_SLED_POWER);
              #else
  72   3                              SetGpioRegBit(SLED_POWER_PORT, MASK_SLED_POWER);
  73   3      #endif
  74   3                      }
  75   2                      
  76   2      #ifdef  FUNC_GPIO_KEY_EN
              //              SLedOnOffFlag = IsLightOn;                      
              #endif
  79   2              }
  80   1      
  81   1      #ifdef SLED_MP3_EN
  82   1              if(Led == LED_MP3)
  83   1              {
  84   2                      DBG(("SLED_MP3 "));
  85   2                      if(IsLightOn)
  86   2                      {
  87   3                              DBG(("ON\n"));
  88   3                              if(gSys.SystemMode == SYS_MODE_BLUETOOTH ||
  89   3                                      ChannelType == 3)
  90   3                                      SetGpioRegBit(SLED_MP3_PORT, MASK_SLED_MP3);
  91   3                              else
  92   3                                      ClrGpioRegBit(SLED_MP3_PORT, MASK_SLED_MP3);
  93   3                      }
  94   2                      else
  95   2                      {
  96   3                              DBG(("OFF\n"));
  97   3                              SetGpioRegBit(SLED_MP3_PORT, MASK_SLED_MP3);
  98   3                      }
  99   2              }
 100   1      #endif
 101   1      
 102   1      #ifdef SLED_USB_EN
                      if(Led == LED_USB)
                      {
                              DBG(("SLED_USB "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_USB_PORT, MASK_SLED_USB);
                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_USB_PORT, MASK_SLED_USB);
                              }
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 3   

                      }
              #endif
 118   1      
 119   1      #ifdef SLED_SD_EN
                      if(Led == LED_SD)
                      {
                              DBG(("SLED_SD "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_SD_PORT, MASK_SLED_SD);
                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_SD_PORT, MASK_SLED_SD);
                              }
                      }
              #endif
 135   1      
 136   1      #ifdef SLED_AUX_EN
                      if(Led == LED_AUX)
                      {
                              DBG(("SLED_AUX "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_AUX_PORT, MASK_SLED_AUX);
                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_AUX_PORT, MASK_SLED_AUX);
                              }
                      }
              #endif
 152   1      
 153   1      #ifdef SLED_RAD_EN
                      if(Led == LED_RADIO)
                      {
                              DBG(("SLED_RADIO "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_RADIO_PORT, MASK_SLED_RADIO);
                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_RADIO_PORT, MASK_SLED_RADIO);
                              }
                      }
              #endif
 169   1      
 170   1      #ifdef SLED_REP_EN
                      if(Led == LED_REPEAT)
                      {
                              DBG(("SLED_REPEAT "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_REPEAT_PORT, MASK_SLED_REPEAT);
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 4   

                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_REPEAT_PORT, MASK_SLED_REPEAT);
                              }
                      }
              #endif
 186   1      
 187   1      #ifdef SLED_AUD_EN
                      if(Led == LED_AUDIO)
                      {
                              DBG(("SLED_AUDIO "));
                              if(IsLightOn)
                              {
                                      DBG(("ON\n"));
                                      ClrGpioRegBit(SLED_AUDIO_PORT, MASK_SLED_AUDIO);
                              }
                              else
                              {
                                      DBG(("OFF\n"));
                                      SetGpioRegBit(SLED_AUDIO_PORT, MASK_SLED_AUDIO);
                              }
                      }
              #endif          
 203   1      }
 204          
 205          
 206          // 初始化.
 207          VOID SLedInit(VOID)
 208          {       
 209   1      #if defined(FUNC_SINGLE_LED_HIGHON_EN)
                      ClrGpioRegBit(SLED_PORT_PU, MASK_SLED_POWER);           // Pull-Down.
                      ClrGpioRegBit(SLED_PORT_PD, MASK_SLED_POWER);           // Pull-Down.
                      ClrGpioRegBit(SLED_PORT_IE, MASK_SLED_POWER);           // Input Disable
                      SetGpioRegBit(SLED_PORT_OE, MASK_SLED_POWER);           // Output Enable. // D[2:7]
                      SetGpioRegBit(SLED_PORT_OUT, MASK_SLED_POWER);          // Output 0
              #else
 216   1      #if 0//defined(AU6210K_ZB_BT007_CSR)
                      ClrGpioRegBit(SLED_PORT_PU, MASK_SLED_POWER);           // Pull-Down.
                      ClrGpioRegBit(SLED_PORT_PD, MASK_SLED_POWER);           // Pull-Down.
                      ClrGpioRegBit(SLED_PORT_IE, MASK_SLED_POWER);           // Input Disable
                      SetGpioRegBit(SLED_PORT_OE, MASK_SLED_POWER);           // Output Enable. // D[2:7]
                      SetGpioRegBit(SLED_PORT_OUT, MASK_SLED_POWER);          // Output 0
              #else
 223   1              SetGpioRegBit(SLED_PORT_PU, MASK_SLED_POWER);           // Pull-Down.
 224   1              SetGpioRegBit(SLED_PORT_PD, MASK_SLED_POWER);           // Pull-Down.
 225   1              ClrGpioRegBit(SLED_PORT_IE, MASK_SLED_POWER);           // Input Disable
 226   1              SetGpioRegBit(SLED_PORT_OE, MASK_SLED_POWER);           // Output Enable. // D[2:7]
 227   1              ClrGpioRegBit(SLED_PORT_OUT, MASK_SLED_POWER);          // Output 0
 228   1      #endif  
 229   1      #endif
 230   1      
 231   1              //SetGpioRegBit(SLED_PORT_DS, MASK_ALLSLED);
 232   1      #if defined(AU6210K_LK_SJ_CSRBT)||defined(AU6210K_ZB_BT007_CSR)
 233   1      #ifdef SLED_MP3_EN
 234   1      #if defined(FUNC_SINGLE_LED_HIGHON_EN)
                      ClrGpioRegBit(SLED_MP3_PU, MASK_SLED_MP3);              // Pull-Down.
                      ClrGpioRegBit(SLED_MP3_PD, MASK_SLED_MP3);              // Pull-Down.
                      ClrGpioRegBit(SLED_MP3_IE, MASK_SLED_MP3);              // Input Disable
                      SetGpioRegBit(SLED_MP3_OE, MASK_SLED_MP3);              // Output Enable. // D[2:7]
                      SetGpioRegBit(SLED_MP3_OUT, MASK_SLED_MP3);             // Output 0
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 5   

              #else
 241   1              SetGpioRegBit(SLED_MP3_PU, MASK_SLED_MP3);              // Pull-Down.
 242   1              SetGpioRegBit(SLED_MP3_PD, MASK_SLED_MP3);              // Pull-Down.
 243   1              ClrGpioRegBit(SLED_MP3_IE, MASK_SLED_MP3);              // Input Disable
 244   1              SetGpioRegBit(SLED_MP3_OE, MASK_SLED_MP3);              // Output Enable. // D[2:7]
 245   1              ClrGpioRegBit(SLED_MP3_OUT, MASK_SLED_MP3);             // Output 0
 246   1      #endif  
 247   1      
 248   1      #endif
 249   1      #endif
 250   1      
 251   1      #ifdef AU6210K_NR_D_8_CSRBT
                      SetGpioRegBit(GPIO_D_PU, (1<<1));               // Pull-Down.
                      SetGpioRegBit(GPIO_D_PD, (1<<1));               // Pull-Down.
                      ClrGpioRegBit(GPIO_D_IE, (1<<1));               // Input Disable
                      SetGpioRegBit(GPIO_D_OE, (1<<1));               // Output Enable. // D[2:7]
                      ClrGpioRegBit(GPIO_D_OUT, (1<<1));              // Output 0
              
              #endif
 259   1      //      
 260   1      
 261   1      //      #ifdef SLED_USB_EN
 262   1      //      
 263   1      //      #endif
 264   1      //      #ifdef SLED_SD_EN
 265   1      //      
 266   1      //      #endif
 267   1      //      #ifdef SLED_AUX_EN
 268   1      //      
 269   1      //      #endif
 270   1      //      #ifdef SLED_RAD_EN
 271   1      //      
 272   1      //      #endif
 273   1      //      #ifdef SLED_REP_EN
 274   1      //      
 275   1      //      #endif
 276   1      //      #ifdef SLED_AUD_EN
 277   1      //      
 278   1      //      #endif
 279   1      }
 280          
 281          
 282          // 反初始化.
 283          VOID SLedDeinit(VOID)
 284          {       
 285   1              SLedLightOp(LED_POWER, LIGHTOFF);
 286   1      #ifdef SLED_MP3_EN
 287   1              SLedLightOp(LED_MP3, LIGHTOFF);
 288   1      #endif
 289   1      
 290   1      #ifdef SLED_USB_EN
                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
 293   1      #ifdef SLED_SD_EN
                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
 296   1      
 297   1      #ifdef SLED_AUX_EN
                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
 300   1      
 301   1      #ifdef SLED_RAD_EN
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 6   

                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
 304   1      
 305   1      #ifdef SLED_REP_EN
                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
 308   1      #ifdef AU6210K_NR_D_8_CSRBT
                      ClrGpioRegBit(GPIO_D_OUT, (1<<1));              // Output 0
              #endif
 311   1      /*
 312   1              baGPIOCtrl[GPIO_A_IE] |= 0x40;//A2
 313   1              baGPIOCtrl[GPIO_A_OE] &= ~0x40;
 314   1              baGPIOCtrl[GPIO_A_PU] |= 0x40;
 315   1              baGPIOCtrl[GPIO_A_PD] |= 0x40; 
 316   1              WaitUs(20);
 317   1      */
 318   1      
 319   1      }
 320          
 321          
 322          // 切换设备时调用.
 323          VOID SLedDispDevSymbol(VOID)
 324          {
 325   1              switch(gSys.SystemMode)
 326   1              {
 327   2      #if (defined(FUNC_USB_EN) || defined(FUNC_CARD_EN))
 328   2      #ifdef FUNC_USB_EN
                              case SYS_MODE_USB:
              #ifdef SLED_MP3_EN
                                      SLedLightOp(LED_MP3, LIGHTON);
              #endif
                       
              #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTON);
              #endif
              
              #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
              
              #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
              
              #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
              
              #ifdef SLED_REP_EN
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
                                      break;
              #endif
 355   2      
 356   2      #ifdef FUNC_CARD_EN
 357   2                      case SYS_MODE_SD:
 358   2      #ifdef SLED_MP3_EN
 359   2                              SLedLightOp(LED_MP3, LIGHTON);
 360   2      #endif
 361   2              
 362   2      #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 7   

              #endif
 365   2      
 366   2      #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTON);
              #endif
 369   2      
 370   2      #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
 373   2      
 374   2      #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
 377   2      
 378   2      #ifdef SLED_REP_EN
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
 381   2                              break;
 382   2      #endif
 383   2      #endif
 384   2              
 385   2      #ifdef FUNC_LINEIN_EN
                              case SYS_MODE_LINEIN:
              #ifdef SLED_MP3_EN
                                      SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
               
              #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
              
              #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
                      
              #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTON);
              #endif
              
              #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
              
              #ifdef SLED_REP_EN
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
                                      break;
              #endif
 412   2      
 413   2      #ifdef FUNC_RADIO_EN
 414   2                      case SYS_MODE_RADIO:
 415   2      #ifdef SLED_MP3_EN
 416   2                              SLedLightOp(LED_MP3, LIGHTOFF);
 417   2      #endif 
 418   2      
 419   2      #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
 422   2      
 423   2      #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 8   

 426   2              
 427   2      #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
 430   2      
 431   2      #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTON);
              #endif
 434   2      
 435   2      #ifdef SLED_REP_EN
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
 438   2                              break;
 439   2      #endif
 440   2      
 441   2      #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
                              case SYS_MODE_AUDIO:
                              case SYS_MODE_READER:
                              case SYS_MODE_AUDIO_READER:
              #ifdef SLED_MP3_EN
                                      SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
              
              #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
              
              #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
              
              #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
              
              #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
              
              #ifdef SLED_REP_EN              
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
                                      break;
              #endif
 470   2      
 471   2      #ifdef FUNC_RTC_EN
                              case SYS_MODE_RTC:
              #ifdef SLED_MP3_EN
                                      SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
              
              #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
              
              #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
              
              #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 9   

              
              #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
              
              #ifdef SLED_REP_EN              
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
                                      break;
              #endif
 498   2      
 499   2                      case SYS_MODE_NONE:
 500   2                      default:
 501   2      #ifdef SLED_MP3_EN
 502   2                              SLedLightOp(LED_MP3, LIGHTOFF);
 503   2      #endif
 504   2      
 505   2      #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
 508   2      
 509   2      #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
 512   2      
 513   2      #ifdef SLED_AUX_EN
                                      SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
 516   2      
 517   2      #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
 520   2      
 521   2      #ifdef SLED_REP_EN              
                                      SLedLightOp(LED_REPEAT, LIGHTOFF);
              #endif
 524   2                              break;
 525   2              }
 526   1      
 527   1              SLedLightOp(LED_POWER, LIGHTON);
 528   1              gBlink.BlinkFlag = 0;
 529   1              TimeOutSet(&DispTmr, NORMAL_INTERVAL);
 530   1      }
 531          
 532          
 533          // MP3设备下播放状态改变时调用.
 534          #if (defined(FUNC_USB_EN) || defined(FUNC_CARD_EN))
 535          VOID SLedDispPlayState(VOID)
 536          {
 537   1              if((gSys.SystemMode != SYS_MODE_USB) && (gSys.SystemMode != SYS_MODE_SD))
 538   1              {
 539   2                      return;
 540   2              }
 541   1      
 542   1              if(gPlayCtrl.State == PLAY_STATE_PLAY)//TF card playing led show
 543   1              {
 544   2      #if defined(AU6210K_LK_SJ_CSRBT)||defined(AU6210K_ZB_BT007_CSR)
 545   2                      SLedFlickQuick = 0;
 546   2                      SLedQuickoff = 0;
 547   2                      SLedFlickNormal = 0;
 548   2                      SLedNormaloff = 0;
 549   2                      SLedFlickSlow = 1;
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 10  

 550   2                      SLedSlowoff = 1;
 551   2      #else
                              SLedFlickQuick = 0;
                              SLedQuickoff = 0;
                              SLedFlickNormal = 1;
                              SLedNormaloff = 1;
                              SLedFlickSlow = 0;
                              SLedSlowoff = 0;
              #endif          
 559   2                      SLedLightOp(LED_POWER, LIGHTOFF);
 560   2      #ifdef SLED_MP3_EN
 561   2                      SLedLightOp(LED_MP3, LIGHTOFF);
 562   2      #endif
 563   2              
 564   2      #ifdef SLED_USB_EN
                              if(gSys.SystemMode == SYS_MODE_USB)
                              {
                                      SLedLightOp(LED_USB, LIGHTOFF);
                              }
                              else //if(gSys.SystemMode == SYS_MODE_SD)
              #endif
 571   2              
 572   2      #ifdef SLED_SD_EN       
                              {
                                      SLedLightOp(LED_SD, LIGHTOFF);
                              }
              #endif
 577   2      
 578   2      #ifdef AU6210K_NR_D_8_CSRBT
                              TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);      
              #else
 581   2                      TimeOutSet(&DispTmr, NORMAL_BLINK_INTERVAL);    
 582   2      #endif
 583   2              }
 584   1      #ifdef FUNC_FAST_PLAY_EN
                      else if((gPlayCtrl.State == PLAY_STATE_FF) || (gPlayCtrl.State == PLAY_STATE_FB))
                      {
                              //DBG(("SLED FF/FB\n"));
                              SLedFlickQuick = 1;
                              SLedQuickoff = 1;
                              SLedFlickNormal = 0;
                              SLedNormaloff = 0;
                              SLedFlickSlow = 0;
                              SLedSlowoff = 0;
                              SLedLightOp(LED_POWER, LIGHTOFF);
              #ifdef SLED_MP3_EN
                              SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
                      
              #ifdef SLED_USB_EN
                              if(gSys.SystemMode == SYS_MODE_USB)
                              {
                                      SLedLightOp(LED_USB, LIGHTOFF);
                              }
                              else// if(gSys.SystemMode == SYS_MODE_SD)
              #endif
              
              #ifdef SLED_SD_EN
                              {
                                      SLedLightOp(LED_SD, LIGHTOFF);
                              }
              #endif
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 11  

                              TimeOutSet(&DispTmr, QUICK_BLINK_INTERVAL);
                      }
              #endif
 615   1              else if((gPlayCtrl.State == PLAY_STATE_STOP) || (gPlayCtrl.State == PLAY_STATE_PAUSE))//TF pause led show
 616   1              {
 617   2                      SLedFlickQuick = 0;
 618   2                      SLedQuickoff = 0;
 619   2                      SLedFlickNormal = 0;
 620   2                      SLedNormaloff = 0;
 621   2                      SLedFlickSlow = 0;
 622   2                      SLedSlowoff = 0;
 623   2      #ifdef AU6210K_ZB_BT007_CSR
 624   2                      SLedLightOp(LED_POWER, LIGHTOFF);
 625   2      #else
                              SLedLightOp(LED_POWER, LIGHTON);
              #endif
 628   2      #ifdef SLED_MP3_EN
 629   2                      SLedLightOp(LED_MP3, LIGHTON);
 630   2      #endif
 631   2      
 632   2      #ifdef SLED_USB_EN
                              if(gSys.SystemMode == SYS_MODE_USB)
                              {
                                      SLedLightOp(LED_USB, LIGHTON);
                              }
                              else //if(gSys.SystemMode == SYS_MODE_SD)
              #endif
 639   2      
 640   2      #ifdef SLED_SD_EN
                              {
                                      SLedLightOp(LED_SD, LIGHTON);
                              }
              #endif
 645   2                      TimeOutSet(&DispTmr, 0);
 646   2              }
 647   1              else if((gPlayCtrl.State == PLAY_STATE_IDLE) || (gPlayCtrl.State == PLAY_STATE_BROWSE))
 648   1              {
 649   2                      SLedFlickQuick = 0;
 650   2                      SLedQuickoff = 0;
 651   2                      SLedFlickNormal = 0;
 652   2                      SLedNormaloff = 0;
 653   2                      SLedFlickSlow = 0;
 654   2                      SLedSlowoff = 0;
 655   2                      SLedLightOp(LED_POWER, LIGHTON);
 656   2      #ifdef SLED_MP3_EN
 657   2                      SLedLightOp(LED_MP3, LIGHTON);
 658   2      #endif
 659   2                      if(gSys.SystemMode == SYS_MODE_USB)
 660   2                      {
 661   3      #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTON);
              #endif
 664   3      
 665   3      #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTOFF);
              #endif
 668   3                      }
 669   2                      else// if(gSys.SystemMode == SYS_MODE_SD)
 670   2                      {
 671   3      #ifdef SLED_USB_EN
                                      SLedLightOp(LED_USB, LIGHTOFF);
              #endif
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 12  

 674   3      
 675   3      #ifdef SLED_SD_EN
                                      SLedLightOp(LED_SD, LIGHTON);
              #endif
 678   3                      }
 679   2                      TimeOutSet(&DispTmr, 0);        
 680   2              }
 681   1      }
 682          #endif
 683          
 684          
 685          // MP3设备下Repeat模式改变时调用.
 686          // Repeat也可以根据具体Repeat模式不同设定闪烁的频率，但是必须要用单独的定时器，不能共用MP3播放状态的定时器
             -。
 687          // 目前代码显示部分共用一个定时器，所以Repeat模式闪烁的频率会取决于MP3播放状态，SLedDispRepeat/SLedDispPla
             -yState
 688          // 调用次序也会受到显示。
 689          #ifdef SLED_REP_EN
              VOID SLedDispRepeat(VOID)
              {
                      if((gSys.SystemMode != SYS_MODE_USB) && (gSys.SystemMode != SYS_MODE_SD))
                      {
                              return;
                      }
              
                      if(gPlayCtrl.RepeatMode == REPEAT_ALL)
                      {
                              SLedLightOp(LED_REPEAT, LIGHTOFF);
                              SLedRepeatFlick = 0;
                              SLedRepeatOff = 1;
                      }
                      else if(gPlayCtrl.RepeatMode == REPEAT_ONE)
                      {
                              SLedLightOp(LED_REPEAT, LIGHTON);
                              SLedRepeatFlick = 0;
                              SLedRepeatOff = 0;
                              TimeOutSet(&DispTmr, 0);
                      }
                      else// if(gPlayCtrl.RepeatMode == REPEAT_RANDOM)
                      {
                              SLedLightOp(LED_REPEAT, LIGHTOFF);
                              SLedRepeatFlick = 1;
                              SLedRepeatOff = 1;
                              TimeOutSet(&DispTmr, NORMAL_BLINK_INTERVAL);
                      }
              }
              #endif
 719          
 720          
 721          // LineIn设备显示.
 722          #ifdef FUNC_LINEIN_EN
              VOID SLedDispLineIn(VOID)//linein playing led show
              {
                      if(gSys.SystemMode != SYS_MODE_LINEIN)
                      {
                              return;
                      }
              
              
              
              #if defined(AU6210K_ZB_BT007_CSR) || defined(AU6210K_LK_SJ_CSRBT)
                      if(gSys.MuteFg == TRUE)
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 13  

                      {
              
                              gBlink.BlinkFlag = 0;
                              SLedFlickQuick = 0;
                              SLedQuickoff = 0;
                              SLedFlickNormal = 0;
                              SLedNormaloff = 0;
                              SLedFlickSlow = 0;
                              SLedSlowoff = 0;
              #if defined(AU6210K_ZB_BT007_CSR)||defined(AU6210K_LK_SJ_CSRBT)
                              SLedLightOp(LED_POWER, LIGHTOFF);
              #else
                              SLedLightOp(LED_POWER, LIGHTON);
              #endif
              
              
              #ifdef SLED_MP3_EN
              #if 1//defined(AU6210K_LK_SJ_CSRBT)
                              SLedLightOp(LED_MP3, LIGHTON);
              #else
                              SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
              #endif
              
                              
              #ifdef SLED_AUX_EN
                              SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
                              TimeOutSet(&DispTmr, NORMAL_BLINK_INTERVAL);            
                      }
                      else
                      {
                              gBlink.BlinkFlag = 0;
                              SLedFlickQuick = 0;
                              SLedQuickoff = 0;
                              SLedFlickNormal = 0;
                              SLedNormaloff = 0;
                              SLedFlickSlow = 1;
                              SLedSlowoff = 1;
              
              #if defined(AU6210K_LK_SJ_CSRBT)
                              SLedLightOp(LED_POWER, LIGHTOFF);
              #else
                              SLedLightOp(LED_POWER, LIGHTON);
              #endif
                              
              #ifdef SLED_MP3_EN
              #if defined(AU6210K_LK_SJ_CSRBT)
                              SLedLightOp(LED_MP3, LIGHTON);
              #else
                              SLedLightOp(LED_MP3, LIGHTOFF);
              #endif
              #endif
                              
              #ifdef SLED_AUX_EN
                              SLedLightOp(LED_AUX, LIGHTON);
              #endif
                              TimeOutSet(&DispTmr, 0);
                      }
              #else
                      gBlink.BlinkFlag = 0;
              
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 14  

              #endif
              
              
              #if defined(AU6210K_NR_D_8_CSRBT)
                      SLedLightOp(LED_POWER, LIGHTON);
              #endif
              }
              #endif
 804          
 805          
 806          // Radio设备显示.
 807          #ifdef FUNC_RADIO_EN
 808          VOID SLedDispRadio(VOID)
 809          {
 810   1              if(gSys.SystemMode != SYS_MODE_RADIO)
 811   1              {
 812   2                      return;
 813   2              }
 814   1      
 815   1              if(gRadioCtrl.State == RADIO_INIT)
 816   1              {
 817   2                      gBlink.BlinkFlag = 0;
 818   2                      SLedLightOp(LED_MP3, LIGHTON);
 819   2      #ifdef SLED_RAD_EN
                              SLedLightOp(LED_RADIO, LIGHTON);
              #endif
 822   2                      TimeOutSet(&DispTmr, 0);
 823   2              }
 824   1              else if(gRadioCtrl.State == RADIO_IDLE)
 825   1              {
 826   2                      gBlink.BlinkFlag = 0;           
 827   2                      if(gSys.MuteFg == TRUE)
 828   2                      {
 829   3                              SLedLightOp(LED_MP3, LIGHTOFF);
 830   3      #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
 833   3                              SLedFlickSlow = 1;
 834   3                              SLedSlowoff = 1;
 835   3                              TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);      
 836   3                      }
 837   2                      else
 838   2                      {
 839   3                              SLedLightOp(LED_MP3, LIGHTON);
 840   3      #ifdef SLED_RAD_EN
                                      SLedLightOp(LED_RADIO, LIGHTON);
              #endif
 843   3                              TimeOutSet(&DispTmr, 0);
 844   3                      }       
 845   2              }
 846   1              else
 847   1              {
 848   2      #ifdef  RADIO_SEEK_WAIT_EN              
 849   2                      if(RadioDisFlag == RadioDisCurChAutoscan)
 850   2                      {                       
 851   3                              gBlink.BlinkFlag = 0;
 852   3                              SLedLightOp(LED_MP3, LIGHTON);
 853   3                              return;
 854   3                      }
 855   2      #endif
 856   2                      
 857   2                      SLedLightOp(LED_MP3, LIGHTOFF);
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 15  

 858   2      #ifdef SLED_RAD_EN
                              SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
 861   2                      gBlink.BlinkFlag = 0;
 862   2                      SLedFlickQuick = 1;
 863   2                      SLedQuickoff = 1;
 864   2                      TimeOutSet(&DispTmr, QUICK_BLINK_INTERVAL);
 865   2              }
 866   1      }
 867          #endif
 868          
 869          
 870          // Radio设备显示.
 871          #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
              VOID SLedDispAudio(VOID)
              {
                      if((gSys.SystemMode != SYS_MODE_AUDIO)
                      && (gSys.SystemMode != SYS_MODE_READER)
                      && (gSys.SystemMode != SYS_MODE_AUDIO_READER))
                      {
                              return;
                      }
              
                      if(gAudioState == AUDIO_IDLE)
                      {
                              //DBG(("AUD,IDLE\n"));
                              gBlink.BlinkFlag = 0;
                              SLedLightOp(LED_POWER, LIGHTON);
              #ifdef SLED_AUD_EN
                              SLedLightOp(LED_AUDIO, LIGHTON);
              #endif
                              TimeOutSet(&DispTmr, 0);
                      }
                      else if(gAudioState == AUDIO_PLAY)
                      {
                              SLedLightOp(LED_POWER, LIGHTOFF);
              #ifdef SLED_AUD_EN
                              SLedLightOp(LED_AUDIO, LIGHTOFF);
              #endif
                              gBlink.BlinkFlag = 0;
                              if(gSys.MuteFg == TRUE)
                              {
                                      //DBG(("AUD,MUTE\n"));
                                      SLedFlickSlow = 1;
                                      SLedSlowoff = 1;
                                      TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
                              }
                              else
                              {
                                      SLedFlickNormal = 1;
                                      SLedNormaloff = 1;
                                      TimeOutSet(&DispTmr, NORMAL_BLINK_INTERVAL);
                              }
                      }       
              }
              #endif
 914          
 915          
 916          // RTC设备显示.
 917          #ifdef FUNC_RTC_EN
              VOID SLedDispRTC(VOID)
              {
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 16  

                      if(gSys.SystemMode != SYS_MODE_RTC)
                      {
                              return;
                      }
              
                      SLedLightOp(LED_POWER, LIGHTON);        
              }
              #endif
 928          
 929          
 930          // MUTE状态转变时调用.
 931          VOID SLedDispMute(VOID)
 932          {
 933   1              switch(gSys.SystemMode)
 934   1              {
 935   2      #if (defined(FUNC_USB_EN) || defined(FUNC_CARD_EN))
 936   2                      case SYS_MODE_USB:
 937   2                      case SYS_MODE_SD:
 938   2                              if(gSys.MuteFg == TRUE)
 939   2                              {
 940   3                                      //DBG(("SLED MUTE\n"));
 941   3                                      SLedFlickQuick = 0;
 942   3                                      SLedQuickoff = 0;
 943   3                                      SLedFlickNormal = 0;
 944   3                                      SLedNormaloff = 0;
 945   3                                      SLedFlickSlow = 1;
 946   3                                      SLedSlowoff = 1;
 947   3                                      SLedLightOp(LED_POWER, LIGHTOFF);
 948   3      #ifdef SLED_MP3_EN
 949   3                                      SLedLightOp(LED_MP3, LIGHTOFF);
 950   3      #endif
 951   3      
 952   3      #ifdef SLED_USB_EN
                                              if(gSys.SystemMode == SYS_MODE_USB)
                                              {
                                                      SLedLightOp(LED_USB, LIGHTOFF);
                                              }
                                              else
              #endif
 959   3      
 960   3      #ifdef SLED_SD_EN
                                              {
                                                      SLedLightOp(LED_SD, LIGHTOFF);
                                              }
              #endif
 965   3                                      TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
 966   3                              }
 967   2                              else
 968   2                              {
 969   3                                      SLedFlickQuick = 0;
 970   3                                      SLedQuickoff = 0;
 971   3                                      SLedFlickNormal = 0;
 972   3                                      SLedNormaloff = 0;
 973   3                                      SLedFlickSlow = 0;
 974   3                                      SLedSlowoff = 0;
 975   3                                      SLedLightOp(LED_POWER, LIGHTON);
 976   3      #ifdef SLED_MP3_EN
 977   3                                      SLedLightOp(LED_MP3, LIGHTON);
 978   3      #endif
 979   3      
 980   3      #ifdef SLED_USB_EN
                                              if(gSys.SystemMode == SYS_MODE_USB)
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 17  

                                              {
                                                      SLedLightOp(LED_USB, LIGHTON);
                                              }
                                              else
              #endif
 987   3      
 988   3      #ifdef SLED_SD_EN
                                              {
                                                      SLedLightOp(LED_SD, LIGHTON);
                                              }
              #endif
 993   3                                      TimeOutSet(&DispTmr, 0);
 994   3                              }
 995   2                              break;
 996   2      #endif
 997   2              
 998   2      #ifdef FUNC_LINEIN_EN
                              case SYS_MODE_LINEIN://linein pause led show
                                      if(gSys.MuteFg == TRUE)
                                      {
                                              gBlink.BlinkFlag = 0;
                                              SLedFlickNormal= 0;
                                              SLedNormaloff = 0;
                                              SLedLightOp(LED_POWER, LIGHTON);
              #ifdef SLED_AUX_EN
                                              SLedLightOp(LED_AUX, LIGHTOFF);
              #endif
                                              TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
                                      }
                                      else
                                      {
                                              gBlink.BlinkFlag = 0;
                                              SLedLightOp(LED_POWER, LIGHTON);
              #ifdef SLED_AUX_EN
                                              SLedLightOp(LED_AUX, LIGHTON);
              #endif
                                              TimeOutSet(&DispTmr, 0);
                                      }
                                      break;
              #endif
1022   2      
1023   2      #ifdef FUNC_RADIO_EN
1024   2                      case SYS_MODE_RADIO:
1025   2                              if(gSys.MuteFg == TRUE)
1026   2                              {
1027   3                                      gBlink.BlinkFlag = 0;
1028   3                                      SLedFlickSlow = 1;
1029   3                                      SLedSlowoff = 1;
1030   3                                      SLedLightOp(LED_POWER, LIGHTOFF);
1031   3      #ifdef SLED_RAD_EN
                                              SLedLightOp(LED_RADIO, LIGHTOFF);
              #endif
1034   3                                      TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
1035   3                              }
1036   2                              else
1037   2                              {
1038   3                                      gBlink.BlinkFlag = 0;
1039   3                                      SLedLightOp(LED_POWER, LIGHTON);
1040   3      #ifdef SLED_RAD_EN
                                              SLedLightOp(LED_RADIO, LIGHTON);
              #endif
1043   3                                      TimeOutSet(&DispTmr, 0);
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 18  

1044   3                              }
1045   2                              break;
1046   2      #endif
1047   2      
1048   2      #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
                              case SYS_MODE_AUDIO:
                              case SYS_MODE_READER:
                              case SYS_MODE_AUDIO_READER:
                                      if(gSys.MuteFg == TRUE)
                                      {
                                              gBlink.BlinkFlag = 0;
                                              SLedFlickSlow = 1;
                                              SLedSlowoff = 1;
                                              SLedLightOp(LED_POWER, LIGHTOFF);
              #ifdef SLED_AUD_EN
                                              SLedLightOp(LED_AUDIO, LIGHTOFF);
              #endif
                                              TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
                                      }
                                      else
                                      {
                                              gBlink.BlinkFlag = 0;
                                              SLedLightOp(LED_POWER, LIGHTON);
              #ifdef SLED_AUD_EN
                                              SLedLightOp(LED_AUDIO, LIGHTON);
              #endif
                                              TimeOutSet(&DispTmr, 0);
                                      }
                                      break;
              #endif
1074   2      
1075   2      #ifdef FUNC_RTC_EN
                              case SYS_MODE_RTC:
              
                              //      break;
              #endif
1080   2                      default:
1081   2                              break;
1082   2              }
1083   1      
1084   1      }
1085          
1086          VOID BassLed_CallBak(VOID)
1087          {
1088   1      #ifdef FUNC_NPCA110X_EN
                      DBG1(("isDefaultBass = %x",isDefaultBass));
                      if(isDefaultBass)
                      {
                              ClrGpioRegBit(GPIO_D_OUT, (1<<1));              // Output 0
                      }
                      else
                      {
                              SetGpioRegBit(GPIO_D_OUT, (1<<1));              // Output 0
                      }
              #endif
1099   1      }
1100          
1101          // 显示.
1102          VOID SLedDisplay(VOID)
1103          {
1104   1              BOOL Light;
1105   1      #if 0//defined(AU6210K_NR_D_8_CSRBT)
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 19  

              #ifdef FUNC_POWER_MONITOR_EN
                      if(GetPwrDisp() == PWR_MNT_DISP_EMPTY_V)
                      {
                              if(gBlink.BlinkFlag)
                              {
                                      if(!IsTimeOut(&DispTmr))
                                      {
                                              return;
                                      }
                                      if(SLedFlickQuick)
                                      {
                                              //DBG(("SLedFlickQuick\n"));
                                              TimeOutSet(&DispTmr, QUICK_BLINK_INTERVAL);
                                              SLedQuickoff = !SLedQuickoff;
                                              Light = SLedQuickoff;
                                      }
                                      SLedLightOp(LED_POWER, Light);
                                      SLedLightOp(LED_MP3, Light);
              
                              }
                              else
                              {
                                      SLedFlickQuick = 1;
                                      SLedQuickoff = 1;
                                      SLedFlickNormal = 0;
                                      SLedNormaloff = 0;
                                      SLedFlickSlow = 0;
                                      SLedSlowoff = 0;
                                      SLedLightOp(LED_POWER, LIGHTOFF);
                                      SLedLightOp(LED_MP3, LIGHTOFF);
                                      TimeOutSet(&DispTmr, QUICK_BLINK_INTERVAL);
                              }
                              return;
              
                      }
              #endif  
                      
              #endif  
1144   1              if(gBlink.BlinkFlag)
1145   1              {
1146   2                      if(!IsTimeOut(&DispTmr))
1147   2                      {
1148   3                              return;
1149   3                      }
1150   2      
1151   2                      if(SLedFlickQuick)
1152   2                      {
1153   3                              //DBG(("SLedFlickQuick\n"));
1154   3                              TimeOutSet(&DispTmr, QUICK_BLINK_INTERVAL);
1155   3                              SLedQuickoff = !SLedQuickoff;
1156   3                              Light = SLedQuickoff;
1157   3                      }
1158   2                      else if(SLedFlickSlow)
1159   2                      {
1160   3                              //DBG(("SLedFlickSlow\n"));
1161   3                              TimeOutSet(&DispTmr, SLOW_BLINK_INTERVAL);
1162   3                              SLedSlowoff = !SLedSlowoff;
1163   3                              Light = SLedSlowoff;
1164   3                      }
1165   2                      else
1166   2                      {
1167   3                              //DBG(("SLedFlickNormal\n"));
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 20  

1168   3                              TimeOutSet(&DispTmr, NORMAL_BLINK_INTERVAL);
1169   3                              SLedNormaloff = !SLedNormaloff;
1170   3                              Light = SLedNormaloff;
1171   3                      }
1172   2      
1173   2      #ifdef SLED_REP_EN
                              if(SLedRepeatFlick)
                              {
                                      SLedRepeatOff = !SLedRepeatOff;
                                      //DBG(("SLedRepeatOff:%bx\n", SLedRepeatOff));
                              }
              #endif
1180   2      
1181   2                      switch(gSys.SystemMode)
1182   2                      {
1183   3      #if (defined(FUNC_USB_EN) || defined(FUNC_CARD_EN))
1184   3                              case SYS_MODE_USB:
1185   3                              case SYS_MODE_SD:
1186   3      #if defined(AU6210K_ZB_BT007_CSR)||defined(AU6210K_LK_SJ_CSRBT)
1187   3                                      SLedLightOp(LED_POWER, LIGHTOFF);
1188   3      #else
                                              SLedLightOp(LED_POWER, Light);
              #endif
1191   3      #ifdef SLED_MP3_EN
1192   3                                      SLedLightOp(LED_MP3, Light);
1193   3      #endif
1194   3      
1195   3      #ifdef SLED_USB_EN
                                              if(gSys.SystemMode == SYS_MODE_USB)
                                              {
                                                      SLedLightOp(LED_USB, Light);
                                              }
                                              else
              #endif
1202   3      
1203   3      #ifdef SLED_SD_EN
                                              {
                                                      SLedLightOp(LED_SD, Light);
                                              }
              #endif
1208   3      
1209   3      #ifdef SLED_REP_EN
                                              SLedLightOp(LED_REPEAT, SLedRepeatOff);
              #endif
1212   3                                      break;
1213   3      #endif
1214   3              
1215   3      #ifdef FUNC_LINEIN_EN
                                      case SYS_MODE_LINEIN:
              #if defined(AU6210K_ZB_BT007_CSR)||defined(AU6210K_LK_SJ_CSRBT)
                                              SLedLightOp(LED_POWER, LIGHTOFF);
              #else
                                              SLedLightOp(LED_POWER, Light);
              #endif
              #ifdef SLED_MP3_EN
                                              SLedLightOp(LED_MP3, Light);
              #endif
                                              
              #ifdef SLED_AUX_EN
                                              SLedLightOp(LED_AUX, Light);
              #endif
                                              break;
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 21  

              #endif
1231   3              
1232   3      #ifdef FUNC_RADIO_EN
1233   3                              case SYS_MODE_RADIO:
1234   3                                      SLedLightOp(LED_POWER, FALSE);
1235   3      #ifdef SLED_MP3_EN
1236   3                                      SLedLightOp(LED_MP3, Light);
1237   3      #endif
1238   3                                      
1239   3      #ifdef SLED_RAD_EN
                                              SLedLightOp(LED_RADIO, Light);
              #endif
1242   3                                      break;
1243   3      #endif
1244   3              
1245   3      #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
                                      case SYS_MODE_AUDIO:
                                      case SYS_MODE_READER:
                                      case SYS_MODE_AUDIO_READER:
                                              SLedLightOp(LED_POWER, Light);
              #ifdef SLED_AUD_EN
                                              SLedLightOp(LED_AUDIO, Light);
              #endif
                                              break;
              #endif
1255   3      
1256   3      #if defined(FUNC_BLUETOOTH_EN)
                                      case SYS_MODE_BLUETOOTH:
                                              SLedLightOp(LED_POWER, FALSE);  
                                              break;
              #endif
1261   3              
1262   3      #ifdef FUNC_RTC_EN
                                      case SYS_MODE_RTC:
                      
                                              break;
              #endif
1267   3      
1268   3                      case SYS_MODE_NONE:
1269   3                              //SLedLightOp(LED_POWER, Light);
1270   3                              break;
1271   3                              
1272   3                              default:
1273   3                                      break;
1274   3                      }
1275   2              }
1276   1              else//if(!gBlink.BlinkFlag)
1277   1              {
1278   2                      switch(gSys.SystemMode)
1279   2                      {
1280   3      #if (defined(FUNC_USB_EN) || defined(FUNC_CARD_EN))
1281   3                              case SYS_MODE_USB:
1282   3                              case SYS_MODE_SD:
1283   3                                      SLedDispPlayState();
1284   3                                      break;
1285   3      #endif
1286   3              
1287   3      #ifdef FUNC_LINEIN_EN
                                      case SYS_MODE_LINEIN:
                                              SLedDispLineIn();
                                              break;
              #endif
C51 COMPILER V9.00   SLED_DISP                                                             12/20/2015 23:03:59 PAGE 22  

1292   3              
1293   3      #ifdef FUNC_RADIO_EN
1294   3                              case SYS_MODE_RADIO:
1295   3                                      SLedDispRadio();
1296   3                                      break;
1297   3      #endif
1298   3              
1299   3      #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
                                      case SYS_MODE_AUDIO:
                                      case SYS_MODE_READER:
                                      case SYS_MODE_AUDIO_READER:
                                              SLedDispAudio();
                                              break;
              #endif
1306   3      
1307   3      #if defined(FUNC_BLUETOOTH_EN)
                                      case SYS_MODE_BLUETOOTH:
                                              SLedLightOp(LED_POWER, FALSE);  
                                              break;
              #endif
1312   3      
1313   3      #ifdef FUNC_RTC_EN
                                      case SYS_MODE_RTC:
                                              SLedDispRTC();
                                              break;
              #endif
1318   3      
1319   3                              case SYS_MODE_NONE:
1320   3                                      break;
1321   3                              
1322   3                              default:
1323   3                                      break;
1324   3                      }       
1325   2              }
1326   1      }
1327          
1328          
1329          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
