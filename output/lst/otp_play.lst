C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OTP_PLAY
OBJECT MODULE PLACED IN .\output\obj\otp_play.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE play\otp_play.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(.\confi
                    -g;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\slave;.\blueto
                    -oth;.\i2c) DEBUG PRINT(.\output\lst\otp_play.lst) OBJECT(.\output\obj\otp_play.obj)

line level    source

   1          #include "syscfg.h"
   2          #include "sysctrl.h"
   3          #include "playctrl.h"
   4          #include "devctrl.h"
   5          #include "debug.h"
   6          #include "message.h"
   7          #include "key.h"
   8          #include "timer.h"
   9          #include "otp_play.h"
  10          #include "decd.h"
  11          #include "user_interface.h"
  12          #include "npca110x.h"
  13          
  14          
  15          
  16          #ifdef FUNC_OTP_KEY_SOUND_EN
              
              //数组大小需要为512的整数倍，不足部分填零，否则播放结尾可能有噪声
              BYTE CODE OtpSongSysPowerOn[512 * 3] = 
              {
                      0x49, 0x44, 0x33, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x54, 0x43, 0x4F, 0x4E, 0x00, 0x00, 
                      0x00, 0x06, 0xC0, 0x00, 0x00, 0x28, 0x31, 0x32, 0x29, 0x00, 0xFF, 0xE3, 0x18, 0xC4, 0x00, 0x0C, 
                      0xA2, 0xEA, 0x80, 0x09, 0x85, 0x10, 0x00, 0x00, 0xFF, 0xD0, 0x9F, 0xF2, 0x30, 0x21, 0xFF, 0xDD, 
                      0xC9, 0xFF, 0xF1, 0x6F, 0x00, 0x00, 0x11, 0xFF, 0xFE, 0xD6, 0x63, 0xC9, 0xFF, 0xFF, 0xFB, 0x1F, 
                      0xC5, 0xDB, 0xFF, 0xFF, 0xFC, 0x46, 0x2E, 0xDC, 0x5F, 0xFF, 0xFF, 0xFF, 0xE0, 0x62, 0xDC, 0x00, 
                      0x21, 0x11, 0x4E, 0xC7, 0x88, 0x5F, 0xFF, 0xFC, 0xD1, 0x35, 0xF5, 0x6D, 0x7F, 0x3A, 0x92, 0x5F, 
                      0xBA, 0xD1, 0xFF, 0xE3, 0x18, 0xC4, 0x08, 0x0D, 0x82, 0xE2, 0xF0, 0x01, 0x81, 0x10, 0x00, 0x7F, 
                      0xDF, 0x54, 0xDB, 0xFF, 0xA6, 0x88, 0xD9, 0xFA, 0x9F, 0xFF, 0xDB, 0xB3, 0xB2, 0x6D, 0xBB, 0xD9, 
                      0x7F, 0xFD, 0x6D, 0x9F, 0xEE, 0xC7, 0x6C, 0x91, 0xBE, 0x8C, 0x46, 0x93, 0xFB, 0xA2, 0xAC, 0xAA, 
                      0xCC, 0xF5, 0xD9, 0x84, 0x4A, 0x70, 0x66, 0x57, 0x41, 0xBF, 0xF5, 0x7F, 0x90, 0x54, 0xD1, 0x3A, 
                      0xF7, 0xF2, 0xFE, 0xFF, 0xF3, 0x37, 0xE9, 0xFF, 0x6E, 0xC9, 0xFF, 0xE3, 0x18, 0xC4, 0x0D, 0x10, 
                      0x1A, 0xF6, 0xEC, 0x01, 0x81, 0x28, 0x00, 0x9B, 0xD5, 0xF2, 0x1E, 0x74, 0xDB, 0x72, 0xAB, 0x26, 
                      0xDB, 0xA2, 0xD8, 0x50, 0x51, 0xAF, 0xAA, 0xD0, 0x47, 0xBA, 0x3F, 0x7F, 0x95, 0x8B, 0xD1, 0x6F, 
                      0xDB, 0x9D, 0x4E, 0x52, 0xB8, 0xE0, 0xA3, 0x18, 0x3C, 0xE8, 0x63, 0xDB, 0xA4, 0xA5, 0x7E, 0x6D, 
                      0xFE, 0xD2, 0x9D, 0xEC, 0x71, 0x1F, 0xF2, 0x84, 0x7F, 0xC3, 0x6A, 0xBF, 0xD4, 0x08, 0xF6, 0x32, 
                      0xA1, 0x9B, 0xFF, 0xE3, 0x18, 0xC4, 0x07, 0x0D, 0x01, 0x2E, 0xF1, 0x61, 0xC2, 0x10, 0x00, 0x3A, 
                      0x9C, 0xE9, 0x7A, 0x32, 0xEE, 0xF3, 0xF7, 0xFF, 0x4B, 0x7B, 0x68, 0xCB, 0xFD, 0x65, 0xAF, 0x31, 
                      0x94, 0x80, 0x83, 0xB0, 0x98, 0x54, 0x4A, 0x60, 0x63, 0x3F, 0x66, 0xFD, 0xC7, 0xFD, 0x1A, 0xAB, 
                      0xA7, 0x4F, 0xD9, 0x95, 0x42, 0x91, 0x4A, 0x62, 0x91, 0x7B, 0x6F, 0x17, 0xB6, 0xD9, 0x34, 0x01, 
                      0x11, 0x41, 0xA3, 0x2B, 0xD9, 0x45, 0x6D, 0xDB, 0x5E, 0x26, 0xFF, 0xE3, 0x18, 0xC4, 0x0E, 0x0C, 
                      0xB8, 0x7A, 0xF6, 0x29, 0x46, 0x00, 0x00, 0x8F, 0x14, 0x71, 0x3C, 0xCF, 0x97, 0x52, 0x54, 0x4C, 
                      0x18, 0x29, 0x68, 0xAB, 0x9F, 0x33, 0xB7, 0xFA, 0x8D, 0x7D, 0xB8, 0xA7, 0xFB, 0x6B, 0xFE, 0xC6, 
                      0x74, 0x72, 0x3B, 0x3D, 0x95, 0xE8, 0x16, 0x69, 0xD5, 0x86, 0x26, 0x99, 0x11, 0x7B, 0x0E, 0xE5, 
                      0xF6, 0x32, 0x92, 0x92, 0x5F, 0xF7, 0x75, 0x0A, 0xB6, 0x9F, 0xFA, 0x04, 0x52, 0x5C, 0xAC, 0x6F, 
                      0xA7, 0xAB, 0xFF, 0xE3, 0x18, 0xC4, 0x16, 0x12, 0x72, 0xF2, 0xD8, 0x01, 0x83, 0x10, 0x00, 0xCE, 
                      0x11, 0xD5, 0x11, 0xEB, 0xA6, 0x95, 0xF1, 0x6E, 0x63, 0x9C, 0xB4, 0x4D, 0x95, 0x99, 0x4C, 0xE9, 
                      0xDF, 0xF6, 0x63, 0x06, 0x4A, 0x95, 0x5D, 0x52, 0xC8, 0xD6, 0x97, 0x07, 0xA5, 0x36, 0x7E, 0xC6, 
                      0x1D, 0x90, 0x19, 0x71, 0x04, 0x8C, 0x57, 0xEE, 0xEF, 0xAD, 0xEA, 0xD6, 0xAF, 0xFA, 0xC8, 0x10, 
                      0x39, 0xFE, 0x6D, 0x04, 0x92, 0x49, 0x20, 0x28, 0xA9, 0x5B, 0xFF, 0xE3, 0x18, 0xC4, 0x07, 0x0E, 
                      0x7A, 0x6A, 0xAC, 0xC9, 0x85, 0x10, 0x00, 0xD4, 0x3E, 0xE7, 0x2B, 0x08, 0xB7, 0xBF, 0x2F, 0xF9, 
                      0xCE, 0xEA, 0x52, 0xFF, 0xFD, 0xF5, 0x64, 0x7F, 0xFF, 0xDD, 0x6E, 0x92, 0xB3, 0x74, 0x74, 0xFF, 
                      0xF9, 0x13, 0xF4, 0x0C, 0x54, 0x32, 0x3A, 0x14, 0x2B, 0x7F, 0xFB, 0xFF, 0xBF, 0xAB, 0xA9, 0x4C, 
                      0xE1, 0x5C, 0x69, 0x2F, 0xFC, 0x2D, 0xE7, 0xBF, 0xFF, 0xD0, 0x7C, 0x20, 0x0A, 0x53, 0x5A, 0x49, 
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 2   

                      0x54, 0x65, 0xFF, 0xE3, 0x18, 0xC4, 0x08, 0x0C, 0xA0, 0x42, 0xBC, 0xC9, 0xCD, 0x10, 0x00, 0x45, 
                      0x03, 0x95, 0x9F, 0xA0, 0xFB, 0x01, 0xF7, 0x8F, 0x34, 0x5B, 0xFF, 0xF3, 0x35, 0x3F, 0xEE, 0x07, 
                      0x0E, 0x22, 0x9D, 0x7F, 0xBF, 0xA1, 0x89, 0xEB, 0xE2, 0x77, 0xFA, 0x4C, 0x98, 0x49, 0x32, 0x91, 
                      0x61, 0x46, 0xB8, 0x3D, 0xB5, 0x82, 0x07, 0x20, 0xB9, 0x7A, 0xAA, 0x84, 0x44, 0x40, 0x88, 0x5F, 
                      0xD4, 0x87, 0xC0, 0xE2, 0xC0, 0xE9, 0x28, 0xB6, 0x88, 0x18, 0xFF, 0xE3, 0x18, 0xC4, 0x10, 0x10, 
                      0x62, 0xAA, 0xC5, 0x88, 0x68, 0xC4, 0x05, 0xD6, 0x93, 0xFF, 0xFA, 0x7F, 0xFF, 0xF9, 0x3F, 0xFF, 
                      0xFF, 0xAB, 0x18, 0x64, 0xA2, 0xED, 0xDF, 0xFF, 0xF4, 0xFB, 0x23, 0xFE, 0xA3, 0x1E, 0x66, 0x42, 
                      0xDD, 0xB7, 0x69, 0x28, 0xA8, 0xAF, 0x57, 0x2B, 0x6A, 0xC4, 0x67, 0x30, 0x0A, 0xB8, 0xA1, 0x28, 
                      0x41, 0xBB, 0xC4, 0xB4, 0xC6, 0xE9, 0xBC, 0x78, 0xAA, 0x0D, 0xA8, 0x00, 0x00, 0x46, 0xFF, 0xDE, 
                      0xD1, 0xA9, 0xFF, 0xE3, 0x18, 0xC4, 0x09, 0x0B, 0x7A, 0xD2, 0xD2, 0x08, 0x40, 0x04, 0x91, 0x46, 
                      0xCA, 0x92, 0xAA, 0xD7, 0x1C, 0x35, 0xCF, 0xFF, 0xFF, 0xDD, 0xD3, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 
                      0x52, 0xA9, 0x9D, 0xBB, 0xBD, 0xB5, 0x67, 0xBF, 0x9D, 0xAB, 0xC8, 0xA6, 0x5B, 0x67, 0x46, 0x1D, 
                      0x06, 0x22, 0xB3, 0xF7, 0x2A, 0x0A, 0x02, 0x03, 0x6C, 0x99, 0xCC, 0x78, 0xEA, 0x36, 0x95, 0x1C, 
                      0xBA, 0xD2, 0x77, 0x17, 0x3A, 0xB5, 0x34, 0x26, 0x3F, 0xD4, 0xFF, 0xE3, 0x18, 0xC4, 0x16, 0x0C, 
                      0x18, 0x56, 0xC5, 0x89, 0x4C, 0x10, 0x00, 0xEE, 0xCF, 0xFF, 0xC5, 0xFF, 0x5E, 0x27, 0xF6, 0xED, 
                      0xE7, 0xF5, 0xC8, 0x34, 0x40, 0xEF, 0xA3, 0x53, 0x63, 0x86, 0x31, 0x8C, 0x15, 0x03, 0x12, 0x3C, 
                      0xF2, 0xEA, 0x01, 0x0A, 0xCD, 0x88, 0x9E, 0x24, 0x3F, 0xFF, 0xFB, 0x36, 0xAF, 0x90, 0xA8, 0xBA, 
                      0x4A, 0x9F, 0xD5, 0xF6, 0x76, 0x74, 0x4E, 0xE9, 0xD1, 0x97, 0x94, 0x24, 0x26, 0x2A, 0x34, 0x18, 
                      0xCE, 0x38, 0xFF, 0xE3, 0x18, 0xC4, 0x20, 0x13, 0x82, 0x96, 0xC0, 0xA1, 0x8D, 0x28, 0x00, 0xE8, 
                      0xE3, 0x4E, 0x30, 0x5C, 0xAC, 0xFE, 0xF6, 0x2D, 0x55, 0x35, 0x61, 0x45, 0x73, 0x0D, 0x23, 0x97, 
                      0x54, 0x16, 0x11, 0x28, 0x91, 0xBF, 0x65, 0xA4, 0xAC, 0xB1, 0x42, 0x0B, 0xA1, 0x95, 0xCA, 0xFB, 
                      0x10, 0xAE, 0x63, 0x20, 0x8A, 0x39, 0xAC, 0x15, 0xBE, 0xDF, 0xF2, 0xFF, 0xEB, 0x00, 0x49, 0x00, 
                      0xC1, 0x9C, 0x33, 0x86, 0x7F, 0xFF, 0xFF, 0xFA, 0xFF, 0xB7, 0xFF, 0xE3, 0x18, 0xC4, 0x0D, 0x0F, 
                      0xBB, 0x46, 0xD4, 0xC9, 0x85, 0x28, 0x00, 0xFF, 0xD3, 0xFF, 0xFE, 0x73, 0xA1, 0x1F, 0x3A, 0x37, 
                      0xBD, 0x1F, 0xFA, 0x37, 0xDF, 0xF3, 0xA3, 0x7E, 0x4A, 0x15, 0x15, 0x17, 0x6A, 0xA4, 0xFF, 0xE9, 
                      0x8A, 0x24, 0x51, 0x72, 0x88, 0xB3, 0x8B, 0x1C, 0x44, 0x2C, 0x82, 0x67, 0x2E, 0xBB, 0xB2, 0xD5, 
                      0x99, 0xAF, 0xAF, 0xFF, 0xE8, 0x82, 0x22, 0x9F, 0xD7, 0x06, 0x9C, 0x67, 0x20, 0x00, 0x00, 0xE3, 
                      0x7F, 0xD5, 0xFF, 0xE3, 0x18, 0xC4, 0x09, 0x0E, 0x28, 0x36, 0xD6, 0xB9, 0xC7, 0x10, 0x00, 0x08, 
                      0x65, 0x30, 0x22, 0xCC, 0xCE, 0x38, 0xE7, 0xAC, 0xF0, 0xB2, 0x63, 0xAD, 0x45, 0x65, 0xE8, 0x73, 
                      0xFB, 0x90, 0x53, 0x75, 0x23, 0xDE, 0x83, 0x5F, 0xCE, 0x85, 0x4C, 0x28, 0x58, 0xB2, 0x8A, 0xBD, 
                      0xEF, 0x68, 0x8C, 0xE5, 0x68, 0xDD, 0x6D, 0x62, 0xC1, 0xA1, 0x10, 0x97, 0x9A, 0xBC, 0x8A, 0x02, 
                      0x9D, 0xB6, 0x08, 0x05, 0x1F, 0xFB, 0x0F, 0x73, 0x2A, 0x01, 0xFF, 0xE3, 0x18, 0xC4, 0x0B, 0x0C, 
                      0xD9, 0x0A, 0xCE, 0xC0, 0x51, 0x46, 0x6C, 0x74, 0x64, 0xA0, 0x04, 0xA1, 0x10, 0x08, 0x1B, 0x1A, 
                      0x52, 0xBF, 0xF6, 0xFE, 0xCB, 0x96, 0xB0, 0xA3, 0x0A, 0x50, 0xD4, 0x65, 0x54, 0xBB, 0xDE, 0xFF, 
                      0xE9, 0x4D, 0xB6, 0x7F, 0xF9, 0x68, 0xD9, 0xE3, 0x03, 0x6E, 0x6B, 0x3F, 0x6F, 0xF5, 0x25, 0xF5, 
                      0x04, 0xBF, 0xF4, 0xF5, 0x72, 0x23, 0x45, 0x99, 0x0F, 0x2C, 0xE1, 0xDE, 0x1C, 0xA5, 0xB2, 0x1D, 
                      0xA6, 0xFB, 0xFF, 0xE3, 0x18, 0xC4, 0x12, 0x0C, 0x09, 0x02, 0xBC, 0x00, 0x50, 0x04, 0x10, 0x98, 
                      0xA2, 0xA1, 0x20, 0xC0, 0x80, 0x10, 0x97, 0xF7, 0xE4, 0xE2, 0x04, 0x07, 0xD6, 0x4D, 0x84, 0xD4, 
                      0x28, 0xE0, 0x3D, 0x46, 0x47, 0x3B, 0x6D, 0x36, 0x35, 0x5B, 0xC8, 0x48, 0xF7, 0xAA, 0x04, 0x4C, 
                      0xFF, 0xFF, 0xFF, 0xE9, 0xFF, 0xE6, 0x5A, 0x94, 0x43, 0x8E, 0x56, 0x20, 0x6A, 0xA8, 0xE4, 0x06, 
                      0x32, 0x34, 0x28, 0xFD, 0xAF, 0x21, 0xDF, 0x6D, 0x42, 0x44, 0xFF, 0xE3, 0x18, 0xC4, 0x1C, 0x0D, 
                      0x39, 0x02, 0xC0, 0x01, 0x47, 0x18, 0x00, 0x7D, 0xCB, 0x77, 0x10, 0x01, 0x48, 0x88, 0x94, 0x26, 
                      0x1A, 0x05, 0x40, 0x1C, 0x57, 0x9A, 0x1E, 0xA2, 0x79, 0x44, 0xD7, 0x60, 0x19, 0x54, 0x2F, 0xD7, 
                      0x02, 0x03, 0x70, 0x28, 0x01, 0x40, 0x40, 0xD0, 0x20, 0x14, 0x38, 0x03, 0x53, 0x0C, 0x72, 0x22, 
                      0x63, 0xBE, 0x6C, 0xC4, 0x25, 0x4F, 0xCC, 0x39, 0x54, 0xEA, 0x1D, 0xEC, 0x8B, 0x0C, 0x1D, 0x0C, 
                      0x65, 0x97, 0xFF, 0xE3, 0x18, 0xC4, 0x22, 0x15, 0x8B, 0x3A, 0xBE, 0xF9, 0x8A, 0x10, 0x01, 0xF1, 
                      0x48, 0x47, 0x7A, 0xD4, 0xB9, 0x4B, 0xFF, 0xD0, 0xC5, 0x12, 0xCF, 0xB5, 0x0C, 0x19, 0x0D, 0x59, 
                      0xBF, 0xFD, 0xA6, 0x5E, 0x81, 0x44, 0xD4, 0xBD, 0x0D, 0x43, 0x01, 0x7F, 0xFD, 0x82, 0x8A, 0x32, 
                      0x38, 0x23, 0x2D, 0xB2, 0x94, 0x28, 0x50, 0x12, 0x95, 0xB2, 0xB5, 0x7F, 0xFF, 0x1D, 0xCA, 0xFF, 
                      0xFF, 0x85, 0x85, 0x2A, 0x4C, 0x41, 0x4D, 0x45, 0x33, 0x2E, 0xFF, 0xE3, 0x18, 0xC4, 0x06, 0x00, 
                      0x00, 0x03, 0x48, 0x01, 0xC0, 0x00, 0x00, 0x39, 0x33, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xFF, 0xE3, 0x18, 0xC4, 0x41, 0x00, 0x00, 0x03, 0x48, 0x00, 0x00, 0x00, 0x00, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
                      0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 3   

                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
              };
              
              BYTE CODE OtpSongPlay[512 * 2] = 
              {
                      0x49, 0x44, 0x33, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x76, 0x50, 0x52, 0x49, 0x56, 0x00, 0x00, 
                      0x00, 0x0E, 0x00, 0x00, 0x50, 0x65, 0x61, 0x6B, 0x56, 0x61, 0x6C, 0x75, 0x65, 0x00, 0x5C, 0x0F, 
                      0x00, 0x00, 0x50, 0x52, 0x49, 0x56, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x41, 0x76, 0x65, 0x72, 
                      0x61, 0x67, 0x65, 0x4C, 0x65, 0x76, 0x65, 0x6C, 0x00, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0xFF, 0xE3, 0x18, 0x04, 0x00, 0x02, 0x98, 0x6B, 0x58, 0x00, 0xC1, 0x14, 0x00, 0x05, 0x30, 0xD6, 
                      0xB0, 0x01, 0x82, 0x28, 0x00, 0xFF, 0x65, 0x72, 0x7F, 0xE1, 0x04, 0x7F, 0x9C, 0x01, 0x4F, 0xFF, 
                      0xE0, 0x42, 0xB8, 0x7E, 0xEF, 0xE9, 0x88, 0x3F, 0xFE, 0x5F, 0xFD, 0x95, 0xC9, 0xFF, 0x84, 0x11, 
                      0xFE, 0x70, 0x05, 0x3F, 0xFF, 0x81, 0x0A, 0xE1, 0xFB, 0xBF, 0xA6, 0x20, 0xFF, 0xF9, 0x75, 0x66, 
                      0xDB, 0xFE, 0x82, 0xBE, 0x20, 0xE0, 0xFD, 0xD5, 0xFF, 0xE3, 0x18, 0x04, 0x09, 0x02, 0xE4, 0x87, 
                      0x6A, 0x00, 0xC3, 0x94, 0x00, 0x05, 0xC9, 0x0E, 0xD4, 0x01, 0x87, 0x28, 0x00, 0xBF, 0xE5, 0x62, 
                      0x19, 0xF8, 0x50, 0x27, 0x98, 0x0B, 0xF9, 0xC9, 0xF8, 0x8B, 0xF5, 0x33, 0x6D, 0xFF, 0x41, 0x5F, 
                      0x10, 0x70, 0x7E, 0xEA, 0xDF, 0xF2, 0xB1, 0x0C, 0xFC, 0x28, 0x13, 0xCC, 0x05, 0xFC, 0xE4, 0xFC, 
                      0x45, 0xFA, 0x95, 0x90, 0x06, 0x00, 0x01, 0x49, 0x7F, 0x42, 0x7F, 0xD4, 0x22, 0x18, 0x06, 0x12, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0D, 0x02, 0xD0, 0x8B, 0x60, 0xF8, 0xE2, 0x88, 0x00, 0x05, 0xA1, 0x16, 
                      0xC1, 0xF1, 0xC5, 0x10, 0x00, 0x75, 0xFF, 0xFE, 0xAA, 0x53, 0x3F, 0xFF, 0xFF, 0xB8, 0x99, 0x00, 
                      0x60, 0x00, 0x14, 0x97, 0xF4, 0x27, 0xFD, 0x42, 0x21, 0x80, 0x61, 0x27, 0x5F, 0xFF, 0xEA, 0xA5, 
                      0x33, 0xFF, 0xFF, 0xFB, 0x89, 0x47, 0xFC, 0xFD, 0xD4, 0x80, 0xCF, 0xD9, 0xFF, 0xFE, 0xCA, 0x10, 
                      0xA7, 0x00, 0x11, 0xFC, 0x80, 0xE8, 0x20, 0x0E, 0xFF, 0xE3, 0x18, 0x04, 0x13, 0x03, 0x80, 0x65, 
                      0x58, 0x00, 0x04, 0x02, 0x10, 0x07, 0x00, 0xCA, 0xB0, 0x00, 0x08, 0x04, 0x20, 0x3B, 0xE8, 0xF1, 
                      0x3B, 0xFC, 0x9D, 0x35, 0x25, 0x4E, 0x47, 0xFC, 0xFD, 0xD4, 0x80, 0xCF, 0xD9, 0xFF, 0xFE, 0xCA, 
                      0x10, 0xA7, 0x00, 0x11, 0xFC, 0x80, 0xE8, 0x20, 0x0E, 0x3B, 0xE8, 0xF1, 0x3B, 0xFC, 0x9D, 0x35, 
                      0x25, 0x4E, 0xFF, 0xFF, 0xFA, 0x04, 0x0A, 0x2B, 0xFF, 0xFF, 0xCE, 0xEC, 0x28, 0x04, 0xDF, 0xFF, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0E, 0x03, 0xB8, 0x95, 0x68, 0x00, 0xA1, 0x08, 0x00, 0x07, 0x71, 0x2A, 
                      0xD0, 0x01, 0x42, 0x10, 0x00, 0x46, 0x20, 0x46, 0x16, 0xE2, 0x04, 0x19, 0xDF, 0xFB, 0x7E, 0x20, 
                      0x1C, 0x4A, 0x27, 0x58, 0x73, 0xFF, 0xFF, 0xE8, 0x10, 0x28, 0xAF, 0xFF, 0xFF, 0x3B, 0xB0, 0xA0, 
                      0x13, 0x7F, 0xFD, 0x18, 0x81, 0x18, 0x5B, 0x88, 0x10, 0x67, 0x7F, 0xED, 0xF8, 0x80, 0x71, 0x28, 
                      0x9D, 0x61, 0xC5, 0x00, 0x00, 0x80, 0x01, 0x0F, 0xFF, 0xE3, 0x18, 0x04, 0x05, 0x03, 0x20, 0x03, 
                      0x74, 0xC0, 0xC0, 0x08, 0x00, 0x06, 0x40, 0x06, 0xE9, 0x81, 0x80, 0x10, 0x00, 0xFB, 0xD9, 0xF9, 
                      0xCB, 0xBF, 0xCF, 0x56, 0xAF, 0x57, 0xA2, 0xFE, 0x97, 0xF9, 0x53, 0xAF, 0x76, 0x86, 0x9B, 0x77, 
                      0x15, 0x00, 0x00, 0x80, 0x01, 0x0F, 0xFB, 0xD9, 0xF9, 0xCB, 0xBF, 0xCF, 0x56, 0xAF, 0x57, 0xA2, 
                      0xFE, 0x97, 0xF9, 0x53, 0xAF, 0x76, 0x86, 0x9B, 0x77, 0x15, 0xFE, 0x21, 0x62, 0x7F, 0xFF, 0xF8, 
                      0xFF, 0xE3, 0x18, 0x04, 0x06, 0x02, 0xE4, 0x81, 0x4A, 0x00, 0xE0, 0x8C, 0x00, 0x85, 0xC9, 0x02, 
                      0x94, 0x01, 0xC1, 0x18, 0x01, 0x54, 0x42, 0x51, 0x09, 0xCC, 0x21, 0xC2, 0x15, 0x88, 0x5F, 0x19, 
                      0xBA, 0xA2, 0x4E, 0x28, 0xAE, 0x05, 0x7F, 0x10, 0xB1, 0x3F, 0xFF, 0xFC, 0x2A, 0x21, 0x28, 0x84, 
                      0xE6, 0x10, 0xE1, 0x0A, 0xC4, 0x2F, 0x8C, 0xDD, 0x51, 0x27, 0x14, 0x57, 0x02, 0x95, 0x4C, 0x41, 
                      0x4D, 0x45, 0x33, 0x2E, 0x39, 0x33, 0x55, 0x55, 0xFF, 0xE3, 0x18, 0x04, 0x0A, 0x00, 0x00, 0x01, 
                      0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x48, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x54, 0x41, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 4   

                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                      0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
                      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0C
              };
              
              BYTE CODE OtpSongPause[512 * 2] = 
              {
                      0xFF, 0xE3, 0x18, 0x04, 0x00, 0x02, 0x84, 0x47, 0x64, 0x00, 0xC1, 0x08, 0x00, 0x05, 0x08, 0x8E, 
                      0xC8, 0x01, 0x82, 0x10, 0x00, 0xFF, 0xFF, 0xFC, 0xE1, 0xFF, 0xC5, 0x81, 0x9D, 0xFF, 0x28, 0x70, 
                      0x08, 0x73, 0xF9, 0x47, 0x51, 0xFF, 0xFF, 0xFF, 0xF4, 0xFF, 0xFF, 0xFE, 0x70, 0xFF, 0xE2, 0xC0, 
                      0xCE, 0xFF, 0x94, 0x38, 0x04, 0x39, 0xFC, 0xA3, 0xA8, 0xFF, 0xFF, 0xFF, 0xFA, 0x55, 0xF5, 0xFF, 
                      0xD7, 0xAF, 0x50, 0x5C, 0x6F, 0xFE, 0x83, 0xBA, 0xFF, 0xE3, 0x18, 0x04, 0x0A, 0x03, 0x00, 0x9B, 
                      0x78, 0x00, 0xC1, 0x14, 0x00, 0x06, 0x01, 0x36, 0xF0, 0x01, 0x82, 0x28, 0x00, 0x02, 0xF9, 0x9B, 
                      0xFA, 0xFE, 0x86, 0xFC, 0x63, 0xFF, 0xFF, 0xD5, 0xF1, 0x5F, 0x91, 0xF5, 0xFF, 0xD7, 0xAF, 0x50, 
                      0x5C, 0x6F, 0xFE, 0x83, 0xBA, 0x02, 0xF9, 0x9B, 0xFA, 0xFE, 0x86, 0xFC, 0x63, 0xFF, 0xFF, 0xD5, 
                      0xF1, 0x5F, 0x91, 0x23, 0xFF, 0xFE, 0xA1, 0x0A, 0xEA, 0x14, 0x6F, 0xEC, 0xA4, 0x58, 0x15, 0x3B, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0D, 0x02, 0xDC, 0x2F, 0x6A, 0x50, 0xE1, 0x00, 0x00, 0x05, 0xB8, 0x5E, 
                      0xD4, 0xA1, 0xC2, 0x00, 0x00, 0xFA, 0x42, 0xA3, 0x03, 0xA4, 0x9B, 0xFF, 0xFF, 0xFC, 0x3A, 0x47, 
                      0xFF, 0xFD, 0x42, 0x15, 0xD4, 0x28, 0xDF, 0xD9, 0x48, 0xB0, 0x2A, 0x77, 0xF4, 0x85, 0x46, 0x07, 
                      0x49, 0x37, 0xFF, 0xFF, 0xF8, 0x75, 0x18, 0x40, 0x84, 0x44, 0xD4, 0xB5, 0x3B, 0x75, 0x28, 0x0A, 
                      0x09, 0x09, 0xA6, 0x35, 0x2C, 0x7E, 0x11, 0x09, 0xFF, 0xE3, 0x18, 0x04, 0x12, 0x03, 0x28, 0x2B, 
                      0x56, 0x00, 0x18, 0xA9, 0x10, 0x06, 0x50, 0x56, 0xAC, 0x00, 0x31, 0x52, 0x20, 0x83, 0x47, 0xB6, 
                      0xFE, 0x91, 0x17, 0x05, 0x46, 0x10, 0x21, 0x11, 0x35, 0x2D, 0x4E, 0xDD, 0x4A, 0x02, 0x82, 0x42, 
                      0x69, 0x8D, 0x4B, 0x1F, 0x84, 0x42, 0x60, 0xD1, 0xED, 0xBF, 0xA4, 0x45, 0xC1, 0x55, 0x18, 0x28, 
                      0x92, 0xB7, 0xFF, 0x98, 0x0B, 0x91, 0x27, 0x13, 0x30, 0xE8, 0x30, 0xA2, 0xBF, 0xF8, 0x98, 0xB8, 
                      0xFF, 0xE3, 0x18, 0x04, 0x12, 0x03, 0x9C, 0x65, 0x54, 0x00, 0x09, 0xE5, 0x10, 0x07, 0x38, 0xCA, 
                      0xA8, 0x00, 0x13, 0xCA, 0x20, 0x1C, 0x26, 0x2E, 0xDF, 0xF5, 0x39, 0x83, 0x9F, 0x17, 0x86, 0x1E, 
                      0x30, 0x51, 0x25, 0x6F, 0xFF, 0x30, 0x17, 0x22, 0x4E, 0x26, 0x61, 0xD0, 0x61, 0x45, 0x7F, 0xF1, 
                      0x31, 0x70, 0x38, 0x4C, 0x5D, 0xBF, 0xEA, 0x73, 0x07, 0x3E, 0x2F, 0x0C, 0x3D, 0xF5, 0xB8, 0xB3, 
                      0xC9, 0x67, 0x5F, 0xFC, 0x20, 0x1D, 0x01, 0x83, 0xFF, 0xE3, 0x18, 0x04, 0x0B, 0x03, 0x38, 0x83, 
                      0x5C, 0x00, 0x01, 0xE5, 0x10, 0x06, 0x71, 0x06, 0xB8, 0x00, 0x03, 0xCA, 0x20, 0xC6, 0x77, 0xFF, 
                      0xA1, 0x0C, 0x7F, 0xFE, 0xE1, 0xC1, 0x61, 0x3F, 0xFF, 0xFF, 0x58, 0x1F, 0xD6, 0xE2, 0xCF, 0x25, 
                      0x9D, 0x7F, 0xF0, 0x80, 0x74, 0x06, 0x0F, 0x19, 0xDF, 0xFE, 0x84, 0x31, 0xFF, 0xFB, 0x87, 0x05, 
                      0x84, 0xFF, 0xFF, 0xFD, 0x60, 0x75, 0xFF, 0xFE, 0x00, 0x87, 0xAD, 0xDF, 0xFE, 0x3C, 0x2F, 0xFF, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0A, 0x02, 0xCC, 0x7F, 0x60, 0x00, 0xA3, 0x88, 0x00, 0x05, 0x98, 0xFE, 
                      0xC0, 0x01, 0x47, 0x10, 0x00, 0xFD, 0x5B, 0xFF, 0xD9, 0xC2, 0x8A, 0xBF, 0xFF, 0xC9, 0x1F, 0xF9, 
                      0x22, 0xBF, 0xFF, 0xC0, 0x10, 0xF5, 0xBB, 0xFF, 0xC7, 0x85, 0xFF, 0xFF, 0xAB, 0x7F, 0xFB, 0x38, 
                      0x51, 0x57, 0xFF, 0xF9, 0x23, 0xFF, 0x24, 0x55, 0x43, 0x4D, 0x75, 0x1C, 0xF2, 0xA0, 0x5F, 0x1F, 
                      0x16, 0x5F, 0x08, 0xA9, 0x22, 0x59, 0xEF, 0x31, 0xFF, 0xE3, 0x18, 0x04, 0x10, 0x03, 0xD8, 0x41, 
                      0x58, 0x00, 0xC6, 0x88, 0x00, 0x07, 0xB0, 0x82, 0xB0, 0x01, 0x8D, 0x10, 0x00, 0x36, 0x3E, 0x91, 
                      0x8A, 0x39, 0xE6, 0x4A, 0xA8, 0x5B, 0xC4, 0xC7, 0xF7, 0x1E, 0xFE, 0x61, 0x0D, 0x35, 0xD4, 0x73, 
                      0xCA, 0x81, 0x7C, 0x7C, 0x59, 0x7C, 0x22, 0xA4, 0x89, 0x67, 0xBC, 0xC4, 0xD8, 0xFA, 0x46, 0x28, 
                      0xE7, 0x99, 0x2A, 0xA1, 0x6F, 0x13, 0x1F, 0xDC, 0x7B, 0xF9, 0x85, 0xC9, 0xF1, 0x78, 0x70, 0x56, 
                      0xFF, 0xE3, 0x18, 0x04, 0x05, 0x01, 0xD4, 0x00, 0xE2, 0x00, 0xE0, 0x00, 0x00, 0x83, 0xA8, 0x01, 
                      0xC4, 0x01, 0xC0, 0x00, 0x01, 0x22, 0xB8, 0x0A, 0x68, 0x53, 0x66, 0x82, 0xE4, 0x36, 0x2E, 0x4F, 
                      0x8B, 0xC3, 0x82, 0xB1, 0x15, 0xC0, 0x53, 0x42, 0x9B, 0x34, 0x17, 0x21, 0xB1, 0x55, 0x4C, 0x41, 
                      0x4D, 0x45, 0x33, 0x2E, 0x39, 0x33, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xFF, 0xE3, 0x18, 0x04, 0x1A, 0x00, 0x00, 0x01, 
                      0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x48, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55
              };
              
              BYTE CODE OtpSongVolUp[512 * 2] =
              {
                      0xFF, 0xE3, 0x18, 0x04, 0x00, 0x02, 0x94, 0x65, 0x54, 0x00, 0xC2, 0x88, 0x00, 0x05, 0x28, 0xCA, 
                      0xA8, 0x01, 0x85, 0x10, 0x00, 0xFF, 0xE7, 0xFF, 0x39, 0xC0, 0x40, 0x03, 0xFD, 0x83, 0x81, 0xC1, 
                      0x4F, 0xFF, 0x16, 0x72, 0x8E, 0xFF, 0x3F, 0xBF, 0xFF, 0x47, 0xFF, 0x3F, 0xF9, 0xCE, 0x02, 0x00, 
                      0x1F, 0xEC, 0x1C, 0x0E, 0x0A, 0x7F, 0xF8, 0xB3, 0x94, 0x77, 0xF9, 0xFD, 0xFF, 0xFA, 0x15, 0x6D, 
                      0x5B, 0xB7, 0xE0, 0x2F, 0x80, 0x26, 0x80, 0x16, 0xFF, 0xE3, 0x18, 0x04, 0x09, 0x03, 0x08, 0x89, 
                      0x5C, 0x00, 0xC3, 0x94, 0x00, 0x06, 0x11, 0x12, 0xB8, 0x01, 0x87, 0x28, 0x00, 0x22, 0x8F, 0x3D, 
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 5   

                      0xFF, 0xEA, 0x3B, 0xC4, 0xC7, 0x78, 0x58, 0x9F, 0xF7, 0xFC, 0x67, 0x87, 0x9B, 0x56, 0xED, 0xF8, 
                      0x0B, 0xE0, 0x09, 0xA0, 0x05, 0x88, 0xA3, 0xCF, 0x7F, 0xFA, 0x8E, 0xF1, 0x31, 0xDE, 0x16, 0x27, 
                      0xFD, 0xFF, 0x19, 0xE1, 0xE5, 0xC0, 0x44, 0x11, 0xFF, 0xFF, 0xEA, 0xA0, 0xA8, 0x50, 0x9B, 0x3F, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0B, 0x02, 0xC0, 0x5F, 0x5E, 0xA4, 0xE3, 0x88, 0x00, 0x05, 0x80, 0xBE, 
                      0xBD, 0x49, 0xC7, 0x00, 0x00, 0xFF, 0xF9, 0x8D, 0x04, 0x9B, 0xFF, 0x99, 0xFF, 0xFF, 0xFD, 0xCA, 
                      0xC0, 0x44, 0x11, 0xFF, 0xFF, 0xEA, 0xA0, 0xA8, 0x50, 0x9B, 0x3F, 0xFF, 0xF9, 0x8D, 0x04, 0x9B, 
                      0xFF, 0x99, 0xFF, 0xFF, 0xFD, 0xCA, 0xE6, 0x0E, 0x81, 0xA5, 0xFF, 0xFF, 0xE7, 0xAC, 0xF1, 0x00, 
                      0x61, 0x37, 0xFD, 0xAF, 0xA4, 0x10, 0x77, 0xFC, 0xFF, 0xE3, 0x18, 0x04, 0x12, 0x02, 0x98, 0x63, 
                      0x68, 0x00, 0x00, 0xE9, 0x26, 0x05, 0x30, 0xC6, 0xD0, 0x00, 0x01, 0xD2, 0x4C, 0x31, 0xFF, 0xA7, 
                      0x98, 0x3A, 0x06, 0x97, 0xFF, 0xFF, 0x9E, 0xB3, 0xC4, 0x01, 0x84, 0xDF, 0xF6, 0xBE, 0x90, 0x41, 
                      0xDF, 0xF0, 0xC7, 0xFE, 0x95, 0x2A, 0x6E, 0x82, 0x9F, 0xFF, 0xFE, 0x43, 0x98, 0x31, 0x80, 0x85, 
                      0x3F, 0xFF, 0x21, 0x1C, 0x00, 0xAE, 0x50, 0x20, 0xF7, 0xFE, 0x82, 0xA6, 0xE8, 0x29, 0xFF, 0xFF, 
                      0xFF, 0xE3, 0x18, 0x04, 0x1B, 0x02, 0xB0, 0x8B, 0x6C, 0x00, 0x00, 0x62, 0x20, 0x05, 0x61, 0x16, 
                      0xD8, 0x00, 0x00, 0xC4, 0x40, 0xE4, 0x39, 0x83, 0x18, 0x08, 0x53, 0xFF, 0xF2, 0x11, 0xC0, 0x0A, 
                      0xE5, 0x02, 0x0F, 0x7F, 0xE8, 0xC0, 0x90, 0x00, 0x03, 0x60, 0xFC, 0xE2, 0x60, 0x38, 0xEB, 0xBE, 
                      0xA0, 0x28, 0x37, 0xFE, 0x78, 0x16, 0x06, 0x81, 0x97, 0x60, 0x48, 0x00, 0x01, 0xB0, 0x7E, 0x71, 
                      0x30, 0x1C, 0x75, 0xDF, 0x50, 0x14, 0x1B, 0xFF, 0xFF, 0xE3, 0x18, 0x04, 0x23, 0x02, 0x84, 0x29, 
                      0x69, 0x00, 0x04, 0x05, 0x00, 0x05, 0x08, 0x52, 0xD2, 0x00, 0x08, 0x0A, 0x00, 0x3C, 0x0B, 0x03, 
                      0x40, 0xCB, 0x95, 0x3B, 0x53, 0x1C, 0xB6, 0x1F, 0xFE, 0xED, 0xA4, 0x90, 0x05, 0x27, 0x0B, 0xC7, 
                      0x5D, 0xD3, 0x10, 0x8E, 0x5E, 0xC7, 0xFD, 0xE5, 0x91, 0xA6, 0x54, 0xA1, 0x40, 0xCF, 0xFF, 0xC4, 
                      0x80, 0xB5, 0xDF, 0x85, 0x82, 0x3D, 0xFF, 0xFF, 0x28, 0x4C, 0xED, 0x4C, 0x72, 0xD8, 0x7F, 0xFB, 
                      0xFF, 0xE3, 0x18, 0x04, 0x2D, 0x04, 0xD8, 0x75, 0x50, 0x00, 0x2C, 0xC2, 0x34, 0x09, 0xB0, 0xEA, 
                      0xA0, 0x00, 0x59, 0x84, 0x68, 0xB6, 0x92, 0x40, 0x14, 0x9C, 0x2F, 0x1D, 0x77, 0x4C, 0x42, 0x39, 
                      0x7B, 0x1F, 0xF7, 0x96, 0x46, 0x99, 0x52, 0x85, 0x03, 0x3F, 0xFF, 0x12, 0x02, 0xD7, 0x7E, 0x16, 
                      0x08, 0xF7, 0xFF, 0xFC, 0xA1, 0x35, 0x6F, 0xFF, 0xF9, 0x40, 0xE0, 0xF8, 0xE7, 0x3B, 0x5A, 0x1D, 
                      0xF9, 0x87, 0x8B, 0x42, 0x68, 0xE9, 0x8A, 0xFB, 0xFF, 0xE3, 0x18, 0x04, 0x12, 0x03, 0xB8, 0x77, 
                      0x60, 0x00, 0x28, 0x03, 0x60, 0x07, 0x70, 0xEE, 0xC0, 0x00, 0x50, 0x06, 0xC0, 0x98, 0x77, 0xFD, 
                      0x27, 0xC9, 0xFF, 0x60, 0x0C, 0xFF, 0xE4, 0x18, 0x41, 0xBF, 0xFF, 0xE5, 0x03, 0x83, 0xE3, 0x9C, 
                      0xED, 0x68, 0x77, 0xE6, 0x1E, 0x2D, 0x09, 0xA3, 0xA6, 0x2B, 0xEE, 0x61, 0xDF, 0xF4, 0x9F, 0x27, 
                      0xFD, 0x80, 0x33, 0xFF, 0x90, 0x61, 0x05, 0xFA, 0x0B, 0x6F, 0xFF, 0xF6, 0x0A, 0xDF, 0xFF, 0x90, 
                      0xFF, 0xE3, 0x18, 0x04, 0x09, 0x03, 0x38, 0x9B, 0x6C, 0x00, 0x00, 0x45, 0x18, 0x06, 0x71, 0x36, 
                      0xD8, 0x00, 0x00, 0x8A, 0x30, 0xF0, 0xE0, 0x33, 0xFF, 0xF5, 0x39, 0x04, 0x08, 0x35, 0xBE, 0xF5, 
                      0x0D, 0x7F, 0xC9, 0x88, 0xFF, 0xAF, 0xE8, 0x2D, 0xBF, 0xFF, 0xD8, 0x2B, 0x7F, 0xFE, 0x43, 0xC3, 
                      0x80, 0xCF, 0xFF, 0xD4, 0xE4, 0x10, 0x20, 0xD6, 0xFB, 0xD4, 0x35, 0xFF, 0x26, 0x23, 0xFE, 0xB5, 
                      0xFF, 0x67, 0xF8, 0x6F, 0xFD, 0xEE, 0xFC, 0x22, 0xFF, 0xE3, 0x18, 0x04, 0x08, 0x02, 0x50, 0x03, 
                      0x74, 0x00, 0xA0, 0x08, 0x00, 0x04, 0xA0, 0x06, 0xE8, 0x01, 0x40, 0x10, 0x00, 0xB6, 0xFE, 0x64, 
                      0x16, 0x7B, 0xBD, 0x49, 0x14, 0xFC, 0xA1, 0x2F, 0xF6, 0x7F, 0x86, 0xFF, 0xDE, 0xEF, 0xC2, 0x2B, 
                      0x6F, 0xE6, 0x41, 0x67, 0xBB, 0xD4, 0x91, 0x4F, 0xCA, 0x12, 0xFF, 0xF8, 0xD0, 0x6D, 0x7F, 0xEF, 
                      0xFE, 0x6E, 0x60, 0xAF, 0xFF, 0x00, 0x5F, 0x60, 0xF0, 0xE7, 0x47, 0xEA, 0x9F, 0xFE, 0x31, 0x7A, 
                      0xFF, 0xE3, 0x18, 0x04, 0x16, 0x03, 0xE0, 0xE5, 0x64, 0x00, 0xC2, 0x94, 0x00, 0x07, 0xC1, 0xCA, 
                      0xC8, 0x01, 0x85, 0x28, 0x00, 0x00, 0xDF, 0xFF, 0xFE, 0x67, 0xC5, 0xC4, 0xBE, 0x25, 0xFF, 0xF8, 
                      0xD0, 0x6D, 0x7F, 0xEF, 0xFE, 0x6E, 0x60, 0xAF, 0xFF, 0x00, 0x5F, 0x60, 0xF0, 0xE7, 0x47, 0xEA, 
                      0x9F, 0xFE, 0x31, 0x7A, 0x00, 0xDF, 0xFF, 0xFE, 0x67, 0xC5, 0xC4, 0xBE, 0x25, 0x4C, 0x41, 0x4D, 
                      0x45, 0x33, 0x2E, 0x39, 0x33, 0x55, 0x55, 0x55, 0xFF, 0xE3, 0x18, 0x04, 0x0B, 0x00, 0x00, 0x01, 
                      0xA4, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x48, 0x01, 0xC0, 0x00, 0x00, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0xFF, 0xE3, 0x18, 0x04, 0x3E, 0x00, 0x00, 0x01, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
                      0x48, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
              };
              
              BYTE CODE OtpSongVolDn[512 * 2] =
              {
                      0xFF, 0xE3, 0x18, 0x04, 0x00, 0x02, 0xC8, 0x67, 0x4E, 0x00, 0xC2, 0x88, 0x00, 0x05, 0x90, 0xCE, 
                      0x9C, 0x01, 0x85, 0x10, 0x00, 0xFF, 0x39, 0xDC, 0x9F, 0xE4, 0x8F, 0x01, 0x3F, 0xC1, 0x05, 0xCE, 
                      0xFF, 0xFE, 0x40, 0x82, 0x03, 0x1F, 0xF8, 0x7F, 0xFF, 0xC3, 0xE5, 0xFF, 0xCE, 0x77, 0x27, 0xF9, 
                      0x23, 0xC0, 0x4F, 0xF0, 0x41, 0x73, 0xBF, 0xFF, 0x90, 0x20, 0x80, 0xC7, 0xFE, 0x1F, 0xFF, 0xF0, 
                      0xF9, 0x75, 0xFF, 0x6F, 0x63, 0x85, 0xF9, 0x50, 0xFF, 0xE3, 0x18, 0x04, 0x06, 0x03, 0x3C, 0x69, 
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 6   

                      0x62, 0x00, 0xC3, 0xA8, 0x00, 0x06, 0x78, 0xD2, 0xC4, 0x01, 0x87, 0x50, 0x00, 0x4B, 0x10, 0x8D, 
                      0x1B, 0xBF, 0xFA, 0x11, 0xFA, 0x8B, 0x47, 0x74, 0x05, 0x24, 0xB9, 0x4E, 0x9E, 0x53, 0xB3, 0xFF, 
                      0xD5, 0xFE, 0xDE, 0xC7, 0x0B, 0xF2, 0xA0, 0x96, 0x21, 0x1A, 0x37, 0x7F, 0xF4, 0x23, 0xF5, 0x16, 
                      0x8E, 0xE8, 0x0A, 0x49, 0x72, 0x9D, 0x3C, 0xA7, 0x67, 0xFF, 0xA9, 0xFF, 0xFF, 0xF8, 0x88, 0x11, 
                      0xFF, 0xE3, 0x18, 0x04, 0x05, 0x02, 0xC8, 0x87, 0x68, 0x00, 0xE2, 0x88, 0x00, 0x05, 0x91, 0x0E, 
                      0xD0, 0x01, 0xC5, 0x10, 0x00, 0xBF, 0xFF, 0xE8, 0x61, 0xE0, 0x38, 0x00, 0x1C, 0x27, 0xFF, 0xFD, 
                      0xC3, 0x9A, 0x4F, 0xFD, 0xDF, 0xFB, 0xBF, 0xFF, 0xFE, 0x22, 0x04, 0x6F, 0xFF, 0xFA, 0x18, 0x78, 
                      0x0E, 0x00, 0x07, 0x09, 0xFF, 0xFF, 0x70, 0xE6, 0x93, 0xFF, 0x77, 0xFE, 0xE5, 0x00, 0x19, 0x90, 
                      0x0A, 0xDF, 0xFF, 0xFA, 0x30, 0xA0, 0xA9, 0x7F, 0xFF, 0xE3, 0x18, 0x04, 0x0B, 0x02, 0x90, 0x89, 
                      0x6A, 0x54, 0x00, 0xA9, 0x2A, 0x05, 0x21, 0x12, 0xD4, 0xA8, 0x01, 0x52, 0x54, 0xFF, 0xCF, 0x22, 
                      0x01, 0xF7, 0x7F, 0xA8, 0x87, 0xFE, 0x90, 0x01, 0x99, 0x00, 0xAD, 0xFF, 0xFF, 0xA3, 0x0A, 0x0A, 
                      0x97, 0xFF, 0xFC, 0xF2, 0x20, 0x1F, 0x77, 0xFA, 0x88, 0x7F, 0xE9, 0x81, 0x7C, 0x38, 0x18, 0x65, 
                      0x6F, 0xFF, 0xE8, 0xD6, 0x79, 0x9B, 0xFF, 0xF9, 0xD1, 0x8C, 0x60, 0x23, 0x5F, 0xFF, 0xFF, 0x3B, 
                      0xFF, 0xE3, 0x18, 0x04, 0x15, 0x02, 0x9C, 0x87, 0x68, 0x50, 0x04, 0x02, 0x02, 0x05, 0x39, 0x0E, 
                      0xD0, 0xA0, 0x08, 0x04, 0x04, 0x02, 0xF8, 0x70, 0x30, 0xCA, 0xDF, 0xFF, 0xD1, 0xAC, 0xF3, 0x37, 
                      0xFF, 0xF3, 0xA3, 0x18, 0xC0, 0x46, 0xBF, 0xFF, 0xFE, 0x75, 0x80, 0x65, 0x76, 0x43, 0xEA, 0x60, 
                      0x3A, 0x08, 0x85, 0xC0, 0x26, 0xFC, 0x4A, 0x05, 0x33, 0xDB, 0xF8, 0x50, 0x29, 0x47, 0xBE, 0x01, 
                      0x95, 0xD9, 0x0F, 0xA9, 0x80, 0xE8, 0x22, 0x17, 0xFF, 0xE3, 0x18, 0x04, 0x1E, 0x02, 0x98, 0x29, 
                      0x56, 0x50, 0x0C, 0x07, 0x01, 0x05, 0x30, 0x52, 0xAC, 0xA0, 0x18, 0x0E, 0x02, 0x00, 0x9B, 0xF1, 
                      0x28, 0x14, 0xCF, 0x6F, 0xE1, 0x40, 0xA5, 0x1E, 0xF5, 0x4B, 0xE7, 0xB4, 0xA2, 0x64, 0xF6, 0xFF, 
                      0x0B, 0xDF, 0xFD, 0xCE, 0x0A, 0x80, 0x70, 0x36, 0xF3, 0x87, 0xDC, 0x5D, 0x8E, 0x02, 0x0B, 0xD3, 
                      0x94, 0x4B, 0xE7, 0xB4, 0xA2, 0x64, 0xF6, 0xFF, 0x0B, 0xDF, 0xFD, 0xCE, 0x0A, 0x80, 0x70, 0x36, 
                      0xFF, 0xE3, 0x18, 0x04, 0x27, 0x03, 0x00, 0x45, 0x54, 0x00, 0x04, 0x09, 0x00, 0x06, 0x00, 0x8A, 
                      0xA8, 0x00, 0x08, 0x12, 0x00, 0xF3, 0x87, 0xDC, 0x5D, 0x8E, 0x02, 0x0B, 0xD3, 0x94, 0xFF, 0xD0, 
                      0x44, 0x0E, 0xBC, 0x1D, 0x1F, 0xAA, 0x58, 0xCF, 0xB5, 0x17, 0x4C, 0xD1, 0x7F, 0xAE, 0x0D, 0x48, 
                      0x27, 0x8D, 0x2D, 0xE3, 0xD1, 0xF9, 0xD7, 0xE6, 0xA7, 0xFF, 0x2E, 0xB2, 0x18, 0x42, 0x1A, 0x44, 
                      0x05, 0xF9, 0xB7, 0x26, 0x0F, 0x8F, 0xC4, 0x1F, 0xFF, 0xE3, 0x18, 0x04, 0x2A, 0x05, 0x2C, 0x79, 
                      0x58, 0x00, 0x09, 0x86, 0x18, 0x0A, 0x58, 0xF2, 0xB0, 0x00, 0x13, 0x0C, 0x30, 0xFA, 0x08, 0x81, 
                      0xD7, 0x83, 0xA3, 0xF5, 0x4B, 0x19, 0xF6, 0xA2, 0xE9, 0x9A, 0x2F, 0xF5, 0xC1, 0xA9, 0x04, 0xF1, 
                      0xA5, 0xBC, 0x7A, 0x3F, 0x3A, 0xFC, 0xD4, 0xFF, 0xE5, 0xD6, 0x43, 0x08, 0x43, 0x48, 0x80, 0xBF, 
                      0x36, 0xE4, 0xC1, 0xF1, 0xF8, 0x81, 0x0C, 0x3E, 0xF0, 0x98, 0xFF, 0xA3, 0xFC, 0x19, 0xFE, 0xAF, 
                      0xFF, 0xE3, 0x18, 0x04, 0x0A, 0x03, 0x34, 0x8F, 0x68, 0x14, 0x00, 0xA2, 0x02, 0x06, 0x69, 0x1E, 
                      0xD0, 0x28, 0x01, 0x44, 0x04, 0xFD, 0x74, 0x4D, 0xA8, 0xEC, 0x1C, 0xEF, 0xAA, 0x2B, 0x6F, 0x8B, 
                      0x7F, 0xC4, 0x1F, 0xFF, 0x40, 0x61, 0xF7, 0x84, 0xC7, 0xFD, 0x1F, 0xE0, 0xCF, 0xF5, 0x7F, 0xEB, 
                      0xA2, 0x6D, 0x47, 0x60, 0xE7, 0x7D, 0x51, 0x5B, 0x7C, 0x5B, 0xFE, 0x20, 0xFF, 0xFA, 0x15, 0x30, 
                      0x20, 0x0F, 0xC0, 0xFF, 0xD1, 0x50, 0x04, 0x8F, 0xFF, 0xE3, 0x18, 0x04, 0x09, 0x03, 0x48, 0x1F, 
                      0x68, 0xC8, 0xA1, 0x08, 0x00, 0x06, 0x90, 0x3E, 0xD1, 0x91, 0x42, 0x10, 0x00, 0xF1, 0x22, 0xAA, 
                      0x63, 0x7F, 0xD6, 0x65, 0xF1, 0x11, 0x75, 0x85, 0x4E, 0x7E, 0xCF, 0xFF, 0xB3, 0xC5, 0x8C, 0x08, 
                      0x03, 0xF0, 0x3F, 0xF4, 0x54, 0x01, 0x23, 0xFC, 0x48, 0xAA, 0x98, 0xDF, 0xF5, 0x99, 0x7C, 0x44, 
                      0x5D, 0x61, 0x53, 0x9F, 0xB3, 0xFF, 0xEC, 0xF1, 0x65, 0x76, 0x39, 0xBF, 0xC2, 0x23, 0x8A, 0x6F, 
                      0xFF, 0xE3, 0x18, 0x04, 0x07, 0x03, 0x24, 0x79, 0x58, 0x00, 0xC2, 0x88, 0x00, 0x06, 0x48, 0xF2, 
                      0xB0, 0x01, 0x85, 0x10, 0x00, 0xF1, 0xA6, 0x1A, 0x21, 0xFE, 0x53, 0x4B, 0xFF, 0xF8, 0x56, 0x06, 
                      0xA0, 0x25, 0xFF, 0xB5, 0xDF, 0xFF, 0xC9, 0x3B, 0x1C, 0xDF, 0xE1, 0x11, 0xC5, 0x37, 0xF8, 0xD3, 
                      0x0D, 0x10, 0xFF, 0x29, 0xA5, 0xFF, 0xFC, 0x2B, 0x03, 0x50, 0x12, 0xFF, 0xDA, 0xEF, 0xFF, 0xE4, 
                      0x95, 0x4C, 0x41, 0x4D, 0x45, 0x33, 0x2E, 0x39, 0xFF, 0xE3, 0x18, 0x04, 0x07, 0x00, 0x00, 0x01, 
                      0xA4, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x48, 0x01, 0xC0, 0x00, 0x00, 0x33, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0xFF, 0xE3, 0x18, 0x04, 0x3A, 0x00, 0x00, 0x01, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
                      0x48, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 
                      0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
              };
              
              
              typedef struct _OTPFILEINFO
              {
                      DWORD dwStartAddr;
                      DWORD dwFileSize;
                      DWORD dwOffset;
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 7   

                      BYTE  ucFileType;
                      BYTE  ucFileNum;
                      SONG_INFO gSongInfo;
                      BYTE Volume;
              
              } OTPFILEINFO;
              
              OTPFILEINFO gOtpFileInfo;
              
              extern BOOL             s_BreakPointFlag;
              
              extern VOID SongPlayTimePause(VOID);
              extern BOOL SetDecoderMode(BYTE DecoderMode);
              extern VOID PlayVol2Decd();
              extern VOID UnMute(VOID);
              extern WORD GetPcmFifoBytes(VOID);
              
              
              VOID OtpReadNBytes(DWORD Addr, BYTE* Buffer, WORD Length)
              {
                      WORD Temp;
                      
                      for(Temp = 0; Temp < Length; Temp++)
                      {
                              switch(gOtpFileInfo.ucFileNum)
                              {
                                      case OTPPLAY_NUM_POWERON:
                                              Buffer[Temp] = OtpSongSysPowerOn[Addr + Temp];  
                                              break;
                                              
                                      case OTPPLAY_NUM_PLAY:
                                              Buffer[Temp] = OtpSongPlay[Addr + Temp];        
                                              break;
                                              
                                      case OTPPLAY_NUM_PAUSE:
                                              Buffer[Temp] = OtpSongPause[Addr + Temp];
                                              break;
              
                                      case OTPPLAY_NUM_VOLUP:
                                              Buffer[Temp] = OtpSongVolUp[Addr + Temp];
                                              break;
              
                                      case OTPPLAY_NUM_VOLDN:
                                              Buffer[Temp] = OtpSongVolDn[Addr + Temp];
                                              break;
              
                                      default:
                                              break;                  
                              }       
                      }
              }
              
              
              BOOL OTPFileEOF1(VOID)
              {
                      if(gOtpFileInfo.dwOffset >= gOtpFileInfo.dwFileSize)
                      {
                              return TRUE;
                      }
                      
                      return FALSE;
              }
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 8   

              
              
              //fet file info
              BOOL OTPFileGetInfo(VOID)
              {
                      gOtpFileInfo.dwOffset = 0;
                      gOtpFileInfo.ucFileType = SONG_TYPE_MP3;
              
                      // Setting song information     
                      gOtpFileInfo.gSongInfo.ChannelNum = 1;
                      gOtpFileInfo.gSongInfo.IsVBR = FALSE;
                      gOtpFileInfo.gSongInfo.Mp3MpegVersion = 3;      //MPEG_1;
                      gOtpFileInfo.gSongInfo.Mp3Layer = 1;    //LAYER_3;
                      gOtpFileInfo.gSongInfo.SongType = SONG_TYPE_MP3;
              
                      return TRUE;
              }
              
              
              // Read File data from the specified file.
              WORD OtpFileRd(WORD Buf, WORD Len)
              {
                      //DBG_SPI(("SpiFlashFileRd, rdBuff:%x, length:%x\n", (WORD)rdBuff, length));
                      DBG(("OtpFileRd!\n"));
                      if((DWORD)Len > (gOtpFileInfo.dwFileSize - gOtpFileInfo.dwOffset))
                      {
                              Len = gOtpFileInfo.dwFileSize - gOtpFileInfo.dwOffset;
                      }
              
                      OtpReadNBytes((gOtpFileInfo.dwStartAddr + gOtpFileInfo.dwOffset), (BYTE XDATA*)Buf, Len);
              
                      gOtpFileInfo.dwOffset += Len;
              
                      return Len;
              }
              
              
              VOID OTP_SongSelect(BYTE SongNum)
              {
                      switch(SongNum)
                      {
                              case OTPPLAY_NUM_POWERON:
                                      gOtpFileInfo.dwStartAddr = 0;
                                      gOtpFileInfo.dwFileSize = 512 * 3;      
                                      gOtpFileInfo.gSongInfo.BytesPerSecond = 8000;
                                      gOtpFileInfo.gSongInfo.SamplesPerSecond = 8000;
                                      break;
                                      
                              case OTPPLAY_NUM_PLAY:
                                      gOtpFileInfo.dwStartAddr = 0;
                                      gOtpFileInfo.dwFileSize = 512 * 2;      
                                      gOtpFileInfo.gSongInfo.BytesPerSecond = 64000;
                                      gOtpFileInfo.gSongInfo.SamplesPerSecond = 8000;
                                      break;
                                      
                              case OTPPLAY_NUM_PAUSE:
                                      gOtpFileInfo.dwStartAddr = 0;
                                      gOtpFileInfo.dwFileSize = 512 * 2;      
                                      gOtpFileInfo.gSongInfo.BytesPerSecond = 64000;
                                      gOtpFileInfo.gSongInfo.SamplesPerSecond = 8000;
                                      break;
              
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 9   

                              case OTPPLAY_NUM_VOLUP:
                                      gOtpFileInfo.dwStartAddr = 0;
                                      gOtpFileInfo.dwFileSize = 512 * 2;              
                                      gOtpFileInfo.gSongInfo.BytesPerSecond = 64000;
                                      gOtpFileInfo.gSongInfo.SamplesPerSecond = 8000;
                                      break;
                                      
                              case OTPPLAY_NUM_VOLDN:
                                      gOtpFileInfo.dwStartAddr = 0;
                                      gOtpFileInfo.dwFileSize = 512 * 2;      
                                      gOtpFileInfo.gSongInfo.BytesPerSecond = 64000;
                                      gOtpFileInfo.gSongInfo.SamplesPerSecond = 8000;
                                      break;
              
                              default:
                                      break;
                      }
                      
                      gOtpFileInfo.ucFileNum = SongNum;   
              }
              
              
              //指定播放时间，初始化decoder，给decoder数据，启动decoder解码
              //快进，快退恢复播放
              //进入播放状态
              BOOL OTP_SongPlayStart(VOID)
              {
                      if(!OTPFileGetInfo())
                      {
                              DBG(("OTPFileGetInfo Error!\n"));
                              return FALSE;
                      }
                      
                      RstDecd();
                      SetDecoderMode(gOtpFileInfo.gSongInfo.SongType);               
                      if(!OtpFileRd(gSongInfo.PlayBuffer, 512))
                      {
                              DBG(("OtpFileRd() Failed!\n"));
                              return FALSE;
                      }
                      SetDecoderData(gSongInfo.PlayBuffer, 512);      
                      gSys.Volume = VOLUME_MAX;       
                      InDacChannelSel(DAC_CH_DAC);       
                      InDacSetSampleRate(gOtpFileInfo.gSongInfo.SamplesPerSecond);
              #ifdef AU6210K_NR_D_8_CSRBT
                      NPCA110X_SetOutMute(FALSE);
                      if(gSys.SystemMode == SYS_MODE_SD)
              #endif
                              InDacMuteDis(); 
                      
              #ifdef FUNC_EXMUTE_EN
              #ifdef  FUNC_HEADPHONE_DETECT_EN
                      if(IsHeadphoneLinkFlag == FALSE)
              #endif
                      {
                              ExMuteOff();
                      }       
              #endif
                      WaitMs(200);    
                      PlayVol2Decd();
                      DecoderStartPlay();
                      DBG(("<-SPI_SongPlayStart()\n"));       
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 10  

                      
                      return TRUE;
              }
              
              
              BOOL OTP_SongPlayDo(VOID)                                       
              {       
                      if(!IsDecoderDone())
                      {
                              return TRUE;
                      }
              
                      if(OTPFileEOF1())
                      {
                              DBG(("OTPFileEOF!\n"));
                              WaitMs(5);
                              return FALSE;
                      }
                      else
                      {
                              if(!OtpFileRd(gSongInfo.PlayBuffer, 512))
                              {
                                      DBG(("OtpFileRd() Failed,1!\n"));
                                      return FALSE;
                              }
                      
                              SetDecoderData(gSongInfo.PlayBuffer, 512);      
                      }
              
                      DBG(("<-SPI_SongPlayDo()\n"));
                      return TRUE;
              }
              
              
              //停止解码，关闭DAC
              VOID OTPSongPlayStop(VOID)                                              
              {
                      TIMER   FifoEmptyTmr;
              
                      DBG(("wait fifo empty!\n"));
                      TimeOutSet(&FifoEmptyTmr, 1000);
              
                      while(!IsFifoEmpty())
                      {
              #ifdef FUNC_WATCHDOG_EN
                              FeedWatchDog();
              #endif
                              if (IsTimeOut(&FifoEmptyTmr))
                              {
                                      DBG(("Wait fifo empty time out!()\n"));
                                      break;
                              }
                      }
                      
                      MuteOn(TRUE, TRUE);
              }
              
              
              static VOID NormalSongPlayResume(VOID)
              {
                      s_BreakPointFlag = TRUE;
                      if (!SongPlayInit())
C51 COMPILER V9.00   OTP_PLAY                                                              12/29/2015 21:03:17 PAGE 11  

                      {
                              DBG(("Song Init Error!\n"));
                              return;
                      }               
              }
              
              
              VOID OTP_PlaySelNum(BYTE OtpPlayNum, BOOL PlayResumeFlag)
              {       
                      BYTE Volume;    
              
                      Volume = gSys.Volume;
                      
                      DecoderPause();
                      SongPlayTimePause();
                      
                      if(gSys.SystemMode == SYS_MODE_RADIO)
                      {
                              MuteOn(TRUE, TRUE);             
                      }
                      
                      SysClkDivClr(); 
                      OTP_SongSelect(OtpPlayNum);
                      OTP_SongPlayStart();
              
                      while(OTP_SongPlayDo())
                      {
              #ifdef FUNC_WATCHDOG_EN
                              FeedWatchDog();
              #endif
                      }
                      
                      OTPSongPlayStop();      
                      gSys.Volume = Volume;
                      
                      if(PlayResumeFlag)
                      {
                              NormalSongPlayResume(); //恢复MP3歌曲播放
                      }       
              }
              
              #endif
 654          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
