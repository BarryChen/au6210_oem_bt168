C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DEVICE
OBJECT MODULE PLACED IN .\output\obj\device.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE device\device.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(.\confi
                    -g;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\slave;.\blueto
                    -oth;.\i2c) DEBUG PRINT(.\output\lst\device.lst) OBJECT(.\output\obj\device.obj)

line level    source

   1          #include "syscfg.h"
   2          #include "device.h"
   3          #include "device_hcd.h"
   4          #include "radio_app_interface.h"
   5          #include "radio_ctrl.h"
   6          #include "debug.h"
   7          #include "seg_panel.h"
   8          #include "seg_led_disp.h"
   9          #include "bt.h"
  10          
  11          BOOL gBtCallIsHigh_Flag = FALSE;
  12          BOOL IsBtCallComingFlag = FALSE;
  13          BOOL IsBtCallEndFlag = FALSE;
  14          
  15          
  16          BOOL IsCardLinkFlag = FALSE;
  17          BOOL IsUsbLinkFlag = FALSE;
  18          BOOL IsLineInLinkFlag = FALSE;
  19          BOOL IsPcLinkFlag = FALSE;
  20          #ifdef OPTION_CHARGER_DETECT
              BOOL IsChargerLinkFlag = FALSE;
              #endif
  23          
  24          #ifdef  FUNC_HEADPHONE_DETECT_EN
              BOOL IsHeadphoneLinkFlag = TRUE;
              #endif
  27          
  28          #ifdef FUNC_LED_LINEIN_MULTIPLE_EN
              TIMER gLineInCheckWaitTimer;
              #endif
  31          
  32          #ifdef FUNC_SEG_LED_EN
              extern BOOL gLedDispRefreshFlag;
              #endif
  35          
  36          
  37          /////////////////////////////////////////////////////////////////////////////////////
  38          #ifdef FUNC_USB_EN
              //检查U盘连接状态
              BOOL IsUSBLink(VOID)
              {
                      return HostIsLink();
              }
              
              
              //检查是否有新插入U盘
              BOOL IsUsbInsert(VOID)
              {       
                      BOOL Temp = IsUsbLinkFlag;
                      IsUsbLinkFlag = IsUSBLink();
                      return (!Temp && IsUsbLinkFlag);
              }
              #endif
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 2   

  54          
  55          
  56          #if (defined(FUNC_CARD_EN) || defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READ
             -ER_EN))
  57          
  58          #define         CARD_DETECT_TIME        300
  59          
  60          extern VOID CardSdClkStop(VOID);
  61          extern BOOL gCardPrevLinkState;
  62          
  63          TIMER   CardDctTimer;
  64          
  65          
  66          //检查SD卡连接状态
  67          BOOL IsCardLink(VOID)
  68          {
  69   1      #define CARD_JETTER_TIME 10//防抖时间
  70   1      
  71   1              static BOOL CardLinkFlag = FALSE;
  72   1      
  73   1      #ifdef  SD_DETECT_HW_SW
  74   1              static BOOL IsWaitCardPwrup = TRUE;
  75   1      
  76   1              CardSdClkStop();        //停止SD的CLK的输出，减少对系统的干扰   
  77   1      
  78   1      #if (defined(SD_DETECT_PIN_USE_A4) || defined(SD_DETECT_PIN_USE_D6) || defined(SD_DETECT_PIN_USE_E3))
  79   1              SET_CARD_NOT_TO_GPIO();         //将SD_CLK变成普通GPIO
  80   1      #endif
  81   1      
  82   1              ClrGpioRegBit(CARD_DETECT_PORT_DS, CARD_DETECT_BIT);            //使用弱上拉可以提高SD卡兼容性
  83   1              ClrGpioRegBit(CARD_DETECT_PORT_PU, CARD_DETECT_BIT);
  84   1              ClrGpioRegBit(CARD_DETECT_PORT_PD, CARD_DETECT_BIT);    
  85   1              ClrGpioRegBit(CARD_DETECT_PORT_OE, CARD_DETECT_BIT);
  86   1              SetGpioRegBit(CARD_DETECT_PORT_IE, CARD_DETECT_BIT);
  87   1              //GPIO口做硬检测时，为信号建立等待一段时间
  88   1              //电阻使用2.2K时,等待10us；使用10K时, 需要等20us才能稳定检测
  89   1              WaitUs(20);
  90   1      
  91   1              if(GetGpioReg(CARD_DETECT_PORT_IN) & CARD_DETECT_BIT)
  92   1              {
  93   2                      //DBG(("NO CARD HW IN\n"));
  94   2                      IsWaitCardPwrup = TRUE;
  95   2                      CardLinkFlag = FALSE;
  96   2                      return FALSE;
  97   2              }
  98   1              else
  99   1              {
 100   2                      if(IsWaitCardPwrup == TRUE)
 101   2                      {
 102   3                              IsWaitCardPwrup = FALSE;
 103   3                              gCardPrevLinkState = TRUE;
 104   3                              CardOpen();
 105   3                              TimeOutSet(&CardDctTimer, CARD_DETECT_TIME);    //用于卡的插入消抖，当发现卡插入，到执行软检测延时CARD_DET
             -ECT_TIME时间
 106   3                      }
 107   2              }
 108   1      
 109   1      #ifdef  SD_DETECT_PIN_USE_A4
 110   1              SET_CARD_TO_A3A4A5();   //将A4恢复设置为SD总线
 111   1      #endif
 112   1              
 113   1      #ifdef  SD_DETECT_PIN_USE_D6
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 3   

                      SET_CARD_TO_D5D6D7();   //将D6恢复设置为SD总线
              #endif
 116   1              
 117   1      #ifdef  SD_DETECT_PIN_USE_E3
                      SET_CARD_TO_A0E2E3();   //将E3恢复设置为SD总线
              #endif
 120   1              
 121   1              //本次硬件检测到卡插入后，如果前一次卡的连接状态为FALSE时，会按timeout时间去执行一次软件检测。
 122   1              //或者在卡的通信过程中出现错误，也会执行一次软件检测。
 123   1      
 124   1              if(((CardLinkFlag == FALSE) && IsTimeOut(&CardDctTimer)) || (gCardPrevLinkState == FALSE))
 125   1      #else //!SD_DETECT_HW_SW
                      if(IsTimeOut(&CardDctTimer) || (gCardPrevLinkState == FALSE))  
              #endif
 128   1              {
 129   2                      //DBG(("CARD SW\n"));           
 130   2                      TimeOutSet(&CardDctTimer, CARD_DETECT_TIME);
 131   2                      gCardPrevLinkState = TRUE;
 132   2                      //执行本次软检测
 133   2                      CardLinkFlag = CardDetect();
 134   2                      //停止SD的CLK的输出,减少对系统干扰
 135   2                      CardSdClkStop();
 136   2      
 137   2                      WaitMs(20);
 138   2                      //DBG1(("CardLinkFlag: %d\n", (WORD)CardLinkFlag));
 139   2              }
 140   1      
 141   1              return CardLinkFlag;
 142   1      }
 143          
 144          
 145          //检查是否有新插入的SD卡
 146          BOOL IsCardInsert(VOID)
 147          {
 148   1              BOOL Temp = IsCardLinkFlag;
 149   1      
 150   1              IsCardLinkFlag = IsCardLink();
 151   1      //      DBG(("CardIn:%d, %d\n", (WORD)Temp, (WORD)IsCardLinkFlag));
 152   1              return (!Temp && IsCardLinkFlag);
 153   1      }
 154          #endif
 155          
 156          
 157          #ifdef FUNC_LINEIN_EN
              //检查line-in连接状态
              //使能内部上拉。无line-in时，检测口为高电平，有line-in时，检测口为低电平
              BOOL IsLineInLink(VOID)
              {
              #define LINEIN_JETTER_TIME 20//防抖时间
                      static BYTE LowLevelTimes = 0;
              #ifdef LINEIN_DETECT_BIT
              #ifdef FUNC_LED_LINEIN_MULTIPLE_EN
                      if(!IsTimeOut(&gLineInCheckWaitTimer))  
                      {
                              return IsLineInLinkFlag;
                      }
                      TimeOutSet(&gLineInCheckWaitTimer, 150);
                              
              #if (defined(FUNC_7PIN_SEG_LED_EN) || defined(FUNC_6PIN_SEG_LED_EN))
                      gLedDispRefreshFlag = FALSE;   
                      LedPinGpioInit();
                      baGPIOCtrl[LINEIN_DETECT_PORT_IE] |= LINEIN_DETECT_BIT;
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 4   

                      baGPIOCtrl[LINEIN_DETECT_PORT_PU] &= ~LINEIN_DETECT_BIT;
              #endif
              #else
                      baGPIOCtrl[LINEIN_DETECT_PORT_IE] |= LINEIN_DETECT_BIT;
                      baGPIOCtrl[LINEIN_DETECT_PORT_PU] &= ~LINEIN_DETECT_BIT;
                      baGPIOCtrl[LINEIN_DETECT_PORT_PD] &= ~LINEIN_DETECT_BIT;        
                      baGPIOCtrl[LINEIN_DETECT_PORT_OE] &= ~LINEIN_DETECT_BIT;
              #endif
                      WaitUs(10);
              
                      if(baGPIOCtrl[LINEIN_DETECT_PORT_IN] & LINEIN_DETECT_BIT)
                      {
                              IsLineInLinkFlag = FALSE;
                              LowLevelTimes = 0;
                      }
                      else
                      {
                              if(LowLevelTimes < LINEIN_JETTER_TIME)
                              {
                                      LowLevelTimes++;
                              }
                              else
                              {
                                      IsLineInLinkFlag = TRUE;
                              }
                      }
                      
              #ifdef FUNC_LED_LINEIN_MULTIPLE_EN
                      gLedDispRefreshFlag = TRUE;
              #endif
              
              #else
                      IsLineInLinkFlag = TRUE;
              #endif
                      return IsLineInLinkFlag;
              }
              
              
              //检查是否有新插入line-in
              BOOL IsLineInInsert(VOID)
              {       
                      BOOL Temp = IsLineInLinkFlag;
              
                      IsLineInLinkFlag = IsLineInLink();
                      return (!Temp && IsLineInLinkFlag);
              }
              
              #endif
 224          
 225          #ifdef FUNC_BT_CHAN_AUTO
 226          BOOL IsBtCallComing(VOID)
 227          {       
 228   1              BOOL Temp = IsBtCallComingFlag;
 229   1      
 230   1              IsBtCallComingFlag = GET_BT_CALL_STATUS();
 231   1              return (!Temp && IsBtCallComingFlag);//上升沿
 232   1      }       
 233          
 234          BOOL IsBtCallEnd(VOID)
 235          {       
 236   1              BOOL Temp = IsBtCallEndFlag;
 237   1      
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 5   

 238   1              IsBtCallEndFlag = GET_BT_CALL_STATUS();
 239   1              return (Temp && !IsBtCallEndFlag);//下降沿
 240   1      }       
 241          
 242          #endif
 243          
 244          
 245          
 246          #ifdef FUNC_RADIO_EN
 247          //检查是否有插入Radio 模块
 248          BOOL IsRadioLink(VOID)                  
 249          {
 250   1              if(Radio_Name == RADIO_NONE)
 251   1              {
 252   2                      RadioInit();
 253   2              }
 254   1              return (Radio_Name != RADIO_NONE);
 255   1      }
 256          #endif
 257          
 258          
 259          #if (defined(FUNC_AUDIO_EN) || defined(FUNC_READER_EN) || defined(FUNC_AUDIO_READER_EN))
              //检查PC连接状态
              BOOL IsPcLink(VOID)                     
              {
                      return UsbDeviceIsLink();
              }
              
              
              //检查是否有新插入PC
              BOOL IsPcInsert(VOID)
              {       
                      BOOL Temp = IsPcLinkFlag;
              
                      IsPcLinkFlag = IsPcLink();
                      return (!Temp && IsPcLinkFlag);
              }
              #endif
 276          
 277          
 278          #ifdef OPTION_CHARGER_DETECT
              //硬件检测PC 或充电器连接状态
              //使能内部下拉。无PC或充电器连接时，检测口为低电平，有时检测口为高电平
              BOOL IsInCharge(VOID)
              {
                      baGPIOCtrl[CHARGE_DETECT_PORT_PU] |= CHARGE_DETECT_BIT;
                      baGPIOCtrl[CHARGE_DETECT_PORT_PD] |= CHARGE_DETECT_BIT;
                      baGPIOCtrl[CHARGE_DETECT_PORT_OE] &= ~CHARGE_DETECT_BIT;
                      baGPIOCtrl[CHARGE_DETECT_PORT_IE] |= CHARGE_DETECT_BIT;
                      WaitUs(2);
                      
                      if(baGPIOCtrl[CHARGE_DETECT_PORT_IN] & CHARGE_DETECT_BIT)
                      {
                              return TRUE;
                      }       
              #if 0//def AU6210K_NR_D_8_CSRBT
                      baGPIOCtrl[GPIO_E_PU] |= (1 << 1);
                      baGPIOCtrl[GPIO_E_PD] |= (1 << 1);
                      baGPIOCtrl[GPIO_E_OE] &= ~(1 << 1);
                      baGPIOCtrl[GPIO_E_IE] |= (1 << 1);
                      WaitUs(2);
              #endif
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 6   

                      return FALSE;
              }
              
              
              //检查是否有新插入PC或充电器
              BOOL IsChargerInsert(VOID)
              {       
                      BOOL Temp = IsChargerLinkFlag;
              
                      IsChargerLinkFlag = IsInCharge();
                      return ((!Temp) && IsChargerLinkFlag);
              }
              #endif
 313          
 314          
 315          #ifdef  FUNC_HEADPHONE_DETECT_EN
              //检查HeadPhone连接状态
              //使能内部上拉。无HeadPhone时，检测口为高电平，有HeadPhone时，检测口为低电平
              BOOL IsHeadPhoneLink(VOID)
              {       
              #ifdef HEADPHONE_DETECT_BIT
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_PU] &= ~HEADPHONE_DETECT_BIT;
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_PD] &= ~HEADPHONE_DETECT_BIT;  
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_OE] &= ~HEADPHONE_DETECT_BIT;
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_IE] |= HEADPHONE_DETECT_BIT;
                      WaitUs(2);
                      if(baGPIOCtrl[HEADPHONE_DETECT_PORT_IN] & HEADPHONE_DETECT_BIT)
                      {
                              IsHeadphoneLinkFlag = FALSE;
                      }
                      else
                      {
                              IsHeadphoneLinkFlag = TRUE;
                      }       
                      
              #ifdef FUNC_HEADPHONE_SINGLE_LED_EN     //耳机检测端口与单个LED端口共用
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_IE] &= ~HEADPHONE_DETECT_BIT;
                      baGPIOCtrl[HEADPHONE_DETECT_PORT_OE] |= HEADPHONE_DETECT_BIT;
              #endif
              #endif
              
                      return IsHeadphoneLinkFlag;
              }
              
              
              //检查是否有新插入HeadPhone
              BOOL IsHeadPhonInsert(VOID)
              {       
                      BOOL Temp = IsHeadphoneLinkFlag;
                      
                      IsHeadphoneLinkFlag = IsHeadPhoneLink();
                      return ((!Temp) && IsHeadphoneLinkFlag);
              }
              
              #endif
 355          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14       3
C51 COMPILER V9.00   DEVICE                                                                12/29/2015 13:58:44 PAGE 7   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
