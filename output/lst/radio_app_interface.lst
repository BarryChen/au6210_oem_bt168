C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RADIO_APP_INTERFACE
OBJECT MODULE PLACED IN .\output\obj\radio_app_interface.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE radio\radio_app_interface.c LARGE OBJECTADVANCED OPTIMIZE(9,SIZE) BROWSE IN
                    -CDIR(.\config;.\device;.\display;.\fs;.\key;.\lib_if;.\play;.\system;.\library;.\power;.\radio;.\eeprom;.\spi_flash;.\sl
                    -ave;.\bluetooth;.\i2c) DEBUG PRINT(.\output\lst\radio_app_interface.lst) OBJECT(.\output\obj\radio_app_interface.obj)

line level    source

   1          #include<string.h>
   2          #include <reg51.h>
   3          #include <intrins.h>
   4          #include "type.h"
   5          #include "utility.h"
   6          #include "debug.h"
   7          #include "i2c.h"
   8          #include "gpio.h"
   9          #include "mv_fm.h"
  10          #include "breakpoint.h"
  11          #include "24cxx.h"
  12          #include "sysctrl.h"
  13          #include "dac.h"
  14          #include "user_interface.h"
  15          #include "radio_app_interface.h"
  16          #include "display.h"
  17          
  18          
  19          #ifdef FUNC_RADIO_EN
  20          
  21          BYTE CODE gFmInGain[VOLUME_MAX + 1] = 
  22          {
  23          //FM音频从D3、D4口输出，然后从Line in通道输入到芯片内部
  24          //      63,     51,     39,     29,     20,     18,     16,     15,
  25          //      14,     13,     12,     11,     10,     9,              8,              7,
  26          //      6
  27          #if (VOLUME_MAX == 16)
                      63,             55,             47,             39,             35,             31,             27,             24,
                      23,             22,             21,             20,             19,             18,             17,             16,
                      15
              #else
  32                  63,             61,             59,             57,             55,             53,             51,             49,
  33                  47,             45,             43,             41,             39,             37,             35,             33,
  34                  31,             30,             29,             28,             27,             26,             25,             24,
  35                  23,             22,             21,             20,             19,             18,             17,             16,
  36                  15
  37          #endif
  38          };
  39          
  40          #ifdef FUNC_RADIO_ESD_AUTO_RESUME
  41          extern WORD gRadioCurrFreqBack;
  42          #endif
  43          
  44          
  45          // Save the information into external storage device.
  46          // If succeed return TRUE,otherwise return FALSE.
  47          BOOL RadioWriteData(VOID)
  48          {
  49   1      #ifdef FUNC_BREAK_POINT_EN      
  50   1              BP_SaveInfo((BYTE*)&gBreakPointInfo.PowerMemory.RadioData2Store, sizeof(gBreakPointInfo.PowerMemory.Radio
             -Data2Store));
  51   1              return TRUE;
  52   1      #else
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 2   

                      return FALSE;
              #endif
  55   1      }
  56          
  57          
  58          // Radio Module Initilization
  59          // If succeed return TRUE,otherwise return FALSE.
  60          // 只在系统复位(上电)时调用.
  61          VOID RadioInit(VOID)
  62          {
  63   1      //      DBG((">>RadioInit()\n"));
  64   1              
  65   1      #ifdef FUNC_BREAK_POINT_EN         
  66   1              if((gRadioData.StationSum > MAX_RADIO_STATION_NUM) 
  67   1              || (((gRadioData.CurrStation + 1) > gRadioData.StationSum) && gRadioData.StationSum)
  68   1              || ((gRadioData.Area1StationSum) > gRadioData.StationSum)
  69   1      #ifdef FUNC_SLAVE_UART_EN
                      || (gRadioData.CurrFreq > gRadioCtrl.RadioUpperBound) || (gRadioData.CurrFreq < gRadioCtrl.RadioLowerBoun
             -d)
              #else
  72   1              || (gRadioData.CurrFreq > RADIO_UPPER_BOUND) || (gRadioData.CurrFreq < RADIO_LOWER_BOUND)
  73   1      #endif
  74   1              )               
  75   1      #endif          
  76   1              {
  77   2                      DBG(("\nRadio Module Debug Info:\n"));
  78   2                      DBG(("please check eeprom chip and fm chip\n"));
  79   2                      DBG(("If they work no problem,maybe the data in eeprom is empty\n"));
  80   2                      memset(&gRadioData, 0, sizeof(gRadioData));     
  81   2                      gRadioData.CurrFreq = RADIO_LOWER_BOUND;
  82   2              }
  83   1      
  84   1              RadioShowDebug(RadioShowPowerOn);
  85   1              gRadioCtrl.State = RADIO_INIT;
  86   1              gRadioCtrl.SeekMode = SEEK_NONE;
  87   1              Radio_Name = RADIO_NONE;
  88   1              RadioDisFlag = RadioDisCurFreNum;
  89   1      
  90   1              RadioWriteData();
  91   1      #ifdef RADIO_MVFM_EN
  92   1                              
  93   1              SetGpioRegBit(GPIO_FMD_OE, 0x04);
  94   1              ClrGpioRegBit(GPIO_FMD_IE, 0x04);
  95   1              SetGpioRegBit(GPIO_FMD_PU, 0x0C);
  96   1              ClrGpioRegBit(GPIO_FMD_PD, 0x0C);
  97   1              SetGpioRegBit(GPIO_FMD_OUT, 0x04);
  98   1      
  99   1              if(MVFM_ReadID())
 100   1              {
 101   2                      DBG(("MVFM!\n"));
 102   2                      Radio_Name = RADIO_MVFM;                                                
 103   2                      return;
 104   2              }
 105   1      #endif
 106   1              
 107   1      //      DBG(("<<RadioInit()\n"));
 108   1      }
 109          
 110          
 111          // Radio Power-On.
 112          VOID RadioPowerOn(VOID) 
 113          {
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 3   

 114   1              switch(Radio_Name)
 115   1              {
 116   2      #ifdef RADIO_BK1080_EN  
                              case RADIO_BK1080:
                                      BK1080PowerOn();        
                                      break;
              #endif
 121   2      
 122   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      KT0830PowerOn();
                                      break;
              #endif
 127   2      
 128   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      RDA5807PowerOn();
                                      break;
              #endif
 133   2      
 134   2      #ifdef RADIO_QN8035_EN
                              case RADIO_QN8035:
                                      QN8035PowerOn();
                                      break;
              #endif
 139   2      
 140   2      #ifdef RADIO_MVFM_EN
 141   2                      case RADIO_MVFM:
 142   2                              MVFM_PowerOn();
 143   2                              break;
 144   2      #endif
 145   2      
 146   2                      default:
 147   2                              break;
 148   2              }
 149   1      }
 150          
 151          // Radio Power-Down.
 152          VOID RadioPowerDown(VOID)       
 153          {
 154   1              switch(Radio_Name)
 155   1              {
 156   2      #ifdef RADIO_BK1080_EN  
                              case RADIO_BK1080:
                                      BK1080PowerDown();      
                                      break;
              #endif
 161   2      
 162   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      KT0830PowerDown();
                                      break;
              #endif
 167   2      
 168   2      
 169   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      RDA5807PowerDown();
                                      break;
              #endif
 174   2      
 175   2      #ifdef RADIO_QN8035_EN
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 4   

                              case RADIO_QN8035:
                                      QN8035PowerDown();
                                      break;
              #endif
 180   2      
 181   2      #ifdef RADIO_MVFM_EN
 182   2                      case RADIO_MVFM:
 183   2                              MVFM_PowerDown();
 184   2                              break;
 185   2      #endif
 186   2      
 187   2                      default:
 188   2                              break;
 189   2              }
 190   1      }
 191          
 192          
 193          // Radio Set Frequency
 194          // If succeed return TRUE,otherwise return FALSE.
 195          BOOL RadioSetFreq(VOID)
 196          {
 197   1              DBG(("Fre:%d\n", gRadioData.CurrFreq));
 198   1              
 199   1      #ifdef FUNC_RADIO_ESD_AUTO_RESUME
 200   1              gRadioCurrFreqBack = gRadioData.CurrFreq;
 201   1      #endif
 202   1              
 203   1              switch(Radio_Name)
 204   1              {
 205   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      RDA5807SetFreq(gRadioData.CurrFreq);
                                      break;
              #endif
 210   2      
 211   2      #ifdef RADIO_BK1080_EN
                              case RADIO_BK1080:
                                      BK1080SetFreq(gRadioData.CurrFreq);
                                      break;
              #endif
 216   2      
 217   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      KT0830SetFreq(gRadioData.CurrFreq);
                                      break;
              #endif
 222   2      
 223   2      #ifdef RADIO_QN8035_EN
                              case RADIO_QN8035:                      
                                      QN8035SetFreq(gRadioData.CurrFreq);
                                      break;
              #endif          
 228   2      
 229   2      #ifdef RADIO_MVFM_EN
 230   2                      case RADIO_MVFM:
 231   2                              MVFM_SetFreq(gRadioData.CurrFreq);
 232   2                              break;
 233   2      #endif
 234   2      
 235   2                      default:
 236   2                              return FALSE;
 237   2              }
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 5   

 238   1      
 239   1              if(gSys.MuteFg == TRUE)
 240   1              {
 241   2                      UnMute();
 242   2                      gSys.MuteFg = FALSE;    
 243   2                      
 244   2      #ifdef FUNC_DISP_EN     
 245   2      #ifdef FUNC_SINGLE_LED_EN  
 246   2                      DispDev();
 247   2      #else
                              DispMute(); 
              #endif
 250   2      #endif
 251   2              }
 252   1              return TRUE;
 253   1      }
 254          
 255          
 256          //set fm-in volume.
 257          VOID RadioSetVolume(BYTE Volume)
 258          {
 259   1              InDacLineInGain(gFmInGain[Volume], gFmInGain[Volume]);
 260   1              DBG(("FM LR,V:%bd\n", Volume));
 261   1      }
 262          
 263          
 264          BOOL RadioMute(BOOL MuteFlag)
 265          {
 266   1              switch(Radio_Name)
 267   1              {
 268   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      RDA5807Mute(MuteFlag);
                                      break;
              #endif
 273   2      
 274   2      #ifdef RADIO_BK1080_EN
                              case RADIO_BK1080:
                                      BK1080Mute(MuteFlag);
                                      break;
              #endif
 279   2      
 280   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      KT0830Mute(MuteFlag);
                                      break;
              #endif
 285   2      
 286   2      #ifdef RADIO_QN8035_EN
                              case RADIO_QN8035:
                                      QN8035Mute(MuteFlag);
                                      break;
              #endif
 291   2      
 292   2      #ifdef RADIO_MVFM_EN
 293   2                      case RADIO_MVFM:
 294   2                              MVFM_Mute(MuteFlag);
 295   2                              break;
 296   2      #endif
 297   2      
 298   2                      default:
 299   2                              return FALSE;
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 6   

 300   2              }
 301   1      
 302   1              return TRUE;
 303   1      }
 304          
 305          
 306          // Received Signal Strength Indication
 307          // RSSI_SEEK_THRESHOLD
 308          BYTE RadioRSSIRead(BOOL AutoSeekFlag)
 309          {
 310   1              switch(Radio_Name)
 311   1              {
 312   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      return RDA5807SearchRead(AutoSeekFlag); 
              #endif
 316   2      
 317   2      #ifdef RADIO_BK1080_EN
                              case RADIO_BK1080:
                                      return BK1080SearchRead(AutoSeekFlag);
              #endif
 321   2      
 322   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      return KT0830SearchRead(AutoSeekFlag);
              #endif
 326   2      
 327   2      #ifdef RADIO_QN8035_EN
                              case RADIO_QN8035:
                                      return QN8035SearchRead(AutoSeekFlag);
              #endif
 331   2      
 332   2      #ifdef RADIO_MVFM_EN
 333   2                      case RADIO_MVFM:
 334   2                              return MVFM_SearchRead(AutoSeekFlag);
 335   2      #endif
 336   2      
 337   2                      default:
 338   2                              return FALSE;
 339   2              }
 340   1      }
 341          
 342          
 343          VOID RadioSearchSet(WORD Freq)  
 344          {
 345   1              switch(Radio_Name)
 346   1              {
 347   2      #ifdef RADIO_RDA5807_EN
                              case RADIO_RDA5807:
                                      RDA5807SearchSet(Freq);
                                      break;
              #endif
 352   2      
 353   2      #ifdef RADIO_BK1080_EN
                              case RADIO_BK1080:
                                      BK1080SearchSet(Freq);
                                      break;
              #endif
 358   2      
 359   2      #ifdef RADIO_KT0830_EN
                              case RADIO_KT0830E:
                                      KT0830SearchSet(Freq);
C51 COMPILER V9.00   RADIO_APP_INTERFACE                                                   11/13/2015 14:16:13 PAGE 7   

                                      break;
              #endif
 364   2      
 365   2      #ifdef RADIO_QN8035_EN
                              case RADIO_QN8035:                      
                                      QN8035SearchSet(Freq);
                                      break;
              #endif          
 370   2              
 371   2      #ifdef RADIO_MVFM_EN
 372   2                      case RADIO_MVFM:
 373   2                              MVFM_SearchSet(Freq);
 374   2                              break;
 375   2      #endif
 376   2      
 377   2                      default:
 378   2                              break;
 379   2              }
 380   1      }
 381          
 382          
 383          //设置FM 的Mono  模式
 384          VOID RadioMonoModeSet(BOOL MonoEnFlag)  
 385          {
 386   1              MVFM_SetMonoMode(MonoEnFlag);
 387   1      }
 388          
 389          
 390          //读取FM 信号的Stereo 和 Mono 状态
 391          BOOL RadioGetStereoState(VOID)  
 392          {
 393   1              return MVFM_GetStereoStatus();
 394   1      }
 395          
 396          
 397          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
